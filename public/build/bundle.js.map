{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/utils/Path.js","../../src/utils/bezier.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","class Path {\n    constructor(id, controlPoints = [], color = this.getRandomBrightColor(), robotHeading = 'constant') {\n        this.id = id;\n        this.controlPoints = controlPoints;\n        this.color = color;\n        this.robotHeading = robotHeading;\n        this.bezierCurvePoints = this.calculateBezier();\n    }\n\n    getRandomBrightColor() {\n\t\tconst r = Math.floor(Math.random() * 128 + 128);\n\t\tconst g = Math.floor(Math.random() * 128 + 128);\n\t\tconst b = Math.floor(Math.random() * 128 + 128);\n\t\treturn `rgb(${r}, ${g}, ${b})`;\n\t}\n\n    calculateBezier(steps = 100) {\n        if (this.controlPoints.length < 2) return [];\n        let curve = [];\n        for (let t = 0; t <= 1; t += 1 / steps) {\n            curve.push(this.deCasteljau(this.controlPoints, t));\n        }\n        curve.push(this.controlPoints[this.controlPoints.length - 1]);\n        return curve;\n    }\n\n    deCasteljau(points, t) {\n        if (points.length === 1) return points[0];\n        let newPoints = [];\n        for (let i = 0; i < points.length - 1; i++) {\n            let x = (1 - t) * points[i].x + t * points[i + 1].x;\n            let y = (1 - t) * points[i].y + t * points[i + 1].y;\n            newPoints.push({ x, y });\n        }\n        return this.deCasteljau(newPoints, t);\n    }\n\n    addControlPoint(x, y) {\n        this.controlPoints.push({ x, y });\n        this.bezierCurvePoints = this.calculateBezier();\n    }\n\n    updateControlPoint(index, x, y) {\n        if (index >= 0 && index < this.controlPoints.length) {\n            this.controlPoints[index] = { x, y };\n            this.bezierCurvePoints = this.calculateBezier();\n        }\n    }\n\n    setColor(color) {\n        this.color = color;\n    }\n\n    setHeading(robotHeading) {\n        this.robotHeading = robotHeading;\n    }\n}\n\n// Make sure to use **default** export\nexport default Path;\n","const bezierCache = new Map();\n\nfunction getCachedBezier(t, controlPoints) {\n    const key = JSON.stringify({ t, controlPoints });\n    if (!bezierCache.has(key)) {\n        bezierCache.set(key, getPointAt(t, controlPoints));\n    }\n    return bezierCache.get(key);\n}\n\nexport function factorial(n) {\n    return n <= 1 ? 1 : n * factorial(n - 1);\n}\n\n// Compute a point on a Bézier curve using De Casteljau’s algorithm\nexport function getPointAt(t, controlPoints) {\n    if (controlPoints.length === 2) {\n        // ✅ Linear interpolation for 2-point paths (NO recursion!)\n        return {\n            x: (1 - t) * controlPoints[0].x + t * controlPoints[1].x,\n            y: (1 - t) * controlPoints[0].y + t * controlPoints[1].y\n        };\n    }\n\n    if (controlPoints.length === 1) {\n        // Edge case: Just return the single point\n        return controlPoints[0];\n    }\n\n    // ✅ De Casteljau's algorithm for 3+ points (NO infinite recursion)\n    let newPoints = [];\n    for (let i = 0; i < controlPoints.length - 1; i++) {\n        let x = (1 - t) * controlPoints[i].x + t * controlPoints[i + 1].x;\n        let y = (1 - t) * controlPoints[i].y + t * controlPoints[i + 1].y;\n        newPoints.push({ x, y });\n    }\n\n    return getPointAt(t, newPoints);\n}\n\n// Compute the tangent vector (first derivative)\nexport function getDerivativeAt(t, controlPoints) {\n    if (controlPoints.length < 2) return { x: 0, y: 0 };\n\n    let derivatives = [];\n    for (let i = 0; i < controlPoints.length - 1; i++) {\n        let x = controlPoints.length * (controlPoints[i + 1].x - controlPoints[i].x);\n        let y = controlPoints.length * (controlPoints[i + 1].y - controlPoints[i].y);\n        derivatives.push({ x, y });\n    }\n\n    return getCachedBezier(t, derivatives);\n}\n\n// Compute the normal vector by rotating the tangent by 90°\nexport function getNormalAt(t, controlPoints) {\n    const tangent = getDerivativeAt(t, controlPoints);\n    const length = Math.sqrt(tangent.x ** 2 + tangent.y ** 2);\n    if (length === 0) return { x: 0, y: 0 }; // Prevent division by zero\n    return { x: -tangent.y / length, y: tangent.x / length }; // Rotate by 90 degrees\n}\n\n// Compute offset points based on hitbox width\nexport function getOffsetPointAt(t, controlPoints, width) {\n    const point = getCachedBezier(t, controlPoints);\n    const normal = getNormalAt(t, controlPoints);\n\n    return {\n        left: { x: point.x + normal.x * (width / 2), y: point.y + normal.y * (width / 2) },\n        right: { x: point.x - normal.x * (width / 2), y: point.y - normal.y * (width / 2) }\n    };\n}\n\n// Generate hitbox paths for any degree Bézier curve\nexport function generateHitboxPath(controlPoints, width) {\n    if (controlPoints.length < 2) {\n        console.warn(`⚠️ Skipping hitbox: Not enough control points (${controlPoints.length} found)`);\n        return { leftPath: [], rightPath: [] };\n    }\n\n    const leftPath = [];\n    const rightPath = [];\n\n    // Case 1: Linear Path (2 Points)\n    if (controlPoints.length === 2) {\n        console.log(\"⚠️ Generating LINEAR hitbox for 2-point path.\");\n        for (let t = 0; t <= 1; t += 0.01) {\n            const x = (1 - t) * controlPoints[0].x + t * controlPoints[1].x;\n            const y = (1 - t) * controlPoints[0].y + t * controlPoints[1].y;\n            const normal = getNormalAt(t, controlPoints);\n\n            leftPath.push({ x: x + normal.x * (width / 2), y: y + normal.y * (width / 2) });\n            rightPath.push({ x: x - normal.x * (width / 2), y: y - normal.y * (width / 2) });\n        }\n    }\n    // Case 2: Bézier Curve (3+ Points)\n    else {\n        console.log(\"✅ Generating Bézier hitbox.\");\n        for (let t = 0; t <= 1; t += 0.01) {\n            const offsetPoints = getOffsetPointAt(t, controlPoints, width);\n            leftPath.push(offsetPoints.left);\n            rightPath.push(offsetPoints.right);\n        }\n    }\n\n    console.log(\"✅ Generated hitbox:\", { leftPath, rightPath });\n    return { leftPath, rightPath };\n}\n","<script>\nimport { onMount } from 'svelte';\nimport { writable } from 'svelte/store';\nimport Path from './utils/Path.js';\nimport { generateHitboxPath, getPointAt } from './utils/bezier.js';  \n\t// Robot dimensions in inches\n\tlet robotLength = 18;\n\tlet robotWidth = 18;\n  \n\t// Unit system\n\tlet robotUnits = 'inches';\n\tlet rotationUnits = 'degrees';\n  \n\t// Display dimensions (computed based on robotUnits)\n\t$: displayLength = parseFloat((robotUnits === 'inches' ? robotLength : robotLength * 2.54).toFixed(2));\n\t$: displayWidth = parseFloat((robotUnits === 'inches' ? robotWidth : robotWidth * 2.54).toFixed(2));\n  \n\t// Functions to update robotLength and robotWidth\n\tfunction updateRobotLength(value) {\n\t\tconst newValue = parseFloat(value) || 0; // Treat empty input as 0\n\t\trobotLength = parseFloat((robotUnits === 'inches' ? newValue : newValue / 2.54).toFixed(2));\n\t}\n\n\tfunction updateRobotWidth(value) {\n\t\tconst newValue = parseFloat(value) || 0; // Treat empty input as 0\n\t\trobotWidth = parseFloat((robotUnits === 'inches' ? newValue : newValue / 2.54).toFixed(2));\n\t}\n\n\n\t$: {\n\t\tconst angleConversionFactor = rotationUnits === 'degrees' ? (Math.PI / 180) : 1;\n\t\t$paths.forEach(path => {\n\t\t\tif (path.robotHeading === 'linear') {\n\t\t\t\tpath.startAngle = (path.startAngleDegrees || 0) * angleConversionFactor;\n\t\t\t\tpath.endAngle = (path.endAngleDegrees || 0) * angleConversionFactor;\n\t\t\t} else if (path.robotHeading === 'constant') {\n\t\t\t\tpath.constantAngle = (path.constantAngleDegrees || 0) * angleConversionFactor;\n\t\t\t}\n\t\t});\n\t}\n\n\t$: {\n    console.log(\"offsetPaths:\", JSON.stringify(offsetPaths, null, 2));\n}\n\n\n\n  \n\tfunction generateBezierCurve(pathId) {\n\t\tpaths.update(paths => {\n\t\t\tconst path = paths.find(p => p.id === pathId);\n\t\t\tif (path) {\n\t\t\t\tpath.bezierCurvePoints = calculateBezier(path.controlPoints, 100);\n\t\t\t}\n\t\t\treturn paths;\n\t\t});\n\t}\n  \n\tfunction calculateBezier(points, steps) {\n\t\tlet curve = [];\n\t\tfor (let t = 0; t <= 1; t += 1 / steps) {\n\t\t\tcurve.push(deCasteljau(points, t));\n\t\t}\n\t\tcurve.push(points[points.length - 1]);\n\t\treturn curve;\n\t}\n  \n\tfunction deCasteljau(points, t) {\n\t\tif (points.length === 1) return points[0];\n\t\tlet newPoints = [];\n\t\tfor (let i = 0; i < points.length - 1; i++) {\n\t\t\tlet x = (1 - t) * points[i].x + t * points[i + 1].x;\n\t\t\tlet y = (1 - t) * points[i].y + t * points[i + 1].y;\n\t\t\tnewPoints.push({ x, y });\n\t\t}\n\t\treturn deCasteljau(newPoints, t);\n\t}\n  \n\tfunction exportControlPoints() {\n\t\tconst data = $paths.map(path => ({\n\t\t\tid: path.id,\n\t\t\tcontrolPoints: path.controlPoints,\n\t\t\tcolor: path.color,\n\t\t\trobotHeading: path.robotHeading,\n\t\t\tstartAngleDegrees: path.startAngleDegrees,\n\t\t\tendAngleDegrees: path.endAngleDegrees,\n\t\t\tconstantAngleDegrees: path.constantAngleDegrees,\n\t\t\treverse: path.reverse\n\t\t}));\n\t\tconst json = JSON.stringify(data, null, 2);\n\t\tconst blob = new Blob([json], { type: 'application/json' });\n\t\tconst url = URL.createObjectURL(blob);\n\t\tconst link = document.createElement('a');\n\t\tlink.href = url;\n\t\tlink.download = 'paths.json';\n\t\tlink.click();\n\t}\n\n\tfunction importControlPoints() {\n\t\tconst input = document.createElement('input');\n\t\tinput.type = 'file';\n\t\tinput.accept = '.json';\n\t\tinput.onchange = async (event) => {\n\t\t\tconst file = event.target.files[0];\n\t\t\tconst text = await file.text();\n\t\t\tconst data = JSON.parse(text);\n\t\t\tpaths.set(data.map((path, index) => ({\n\t\t\t\t...path,\n\t\t\t\tid: index\n\t\t\t})));\n\t\t\tdata.forEach((path, index) => generateBezierCurve(index));\n\t\t\tupdateRobotPosition();\n\t\t};\n\t\tinput.click();\n\t}\n\n\tfunction addPath() {\n    paths.update(paths => {\n        const newPath = new Path(paths.length);\n        if (paths.length > 0) {\n            const lastPath = paths[paths.length - 1];\n            if (lastPath.controlPoints.length > 0) {\n                const lastControlPoint = lastPath.controlPoints[lastPath.controlPoints.length - 1];\n                const angle = Math.random() * 2 * Math.PI;\n                const distance = 50;\n                const x = 72 + Math.cos(angle) * distance;\n                const y = 72 + Math.sin(angle) * distance;\n                newPath.controlPoints.push({ x: lastControlPoint.x, y: lastControlPoint.y });\n                newPath.controlPoints.push({ x, y });\n            }\n        } else {\n            newPath.controlPoints.push({ x: 12, y: 96 });\n            newPath.controlPoints.push({ x: 36, y: 96 });\n        }\n        newPath.bezierCurvePoints = newPath.calculateBezier();\n        return [...paths, newPath];\n\t\t});\n\t}\n\n\tonMount(() => {\n\t\tpaths.update(p => {\n\t\t\tif (p.length === 0) {\n\t\t\t\taddPath();\n\t\t\t}\n\t\t\treturn p;\n\t\t});\n\t});\n\n\n\tfunction addControlPointToPathWithIndex(pathId, index) {\n\tpaths.update(paths => {\n\t\tconst path = paths.find(p => p.id === pathId);\n\t\tif (path) {\n\t\t\tconst angle = Math.random() * 2 * Math.PI;\n\t\t\tconst distance = 50;\n\t\t\tconst x = 72 + Math.cos(angle) * distance;\n\t\t\tconst y = 72 + Math.sin(angle) * distance;\n\n\t\t\t// Ensure there are at least 2 points before inserting\n\t\t\tif (path.controlPoints.length > 1) {\n\t\t\t\tconst insertIndex = path.controlPoints.length - 1;  // End-1 index\n\t\t\t\tpath.controlPoints.splice(insertIndex, 0, { x, y });  // 🔹 Insert at End-1\n\t\t\t} else {\n\t\t\t\tpath.controlPoints.push({ x, y }); // Default to normal push if too few points\n\t\t\t}\n\t\t}\n\t\treturn paths;\n\t});\n}\n\n\n\tfunction updatePathColor(pathId, color) {\n\t\tpaths.update(paths => {\n\t\t\tconst path = paths.find(p => p.id === pathId);\n\t\t\tif (path) {\n\t\t\t\tpath.setColor(color);\n\t\t\t}\n\t\t\treturn paths;\n\t\t});\n\t}\n\n\n\tfunction deletePath(pathId) {\n\t\tpaths.update(paths => {\n\t\t\tconst updatedPaths = paths.filter(path => path.id !== pathId);\n\t\t\tupdatedPaths.forEach((path, index) => {\n\t\t\t\tpath.id = index;\n\t\t\t});\n\t\t\tif (autoLinkPaths && pathId > 0 && pathId < paths.length - 1) {\n\t\t\t\tconst previousPath = updatedPaths[pathId - 1];\n\t\t\t\tconst nextPath = updatedPaths[pathId];\n\t\t\t\tif (previousPath && nextPath) {\n\t\t\t\t\tnextPath.controlPoints[0] = { ...previousPath.controlPoints[previousPath.controlPoints.length - 1] };\n\t\t\t\t\tnextPath.bezierCurvePoints = calculateBezier(nextPath.controlPoints, 100);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn updatedPaths;\n\t\t});\n\t}\n\n\tlet scrubValue = 0;\n\tlet robotX = 12;\n\tlet robotY = 96;\n\n\tlet isPlaying = false;\n\tlet wasPaused = true;\n\tlet isStartingFromBeginning = true;\n\t$: animTime = 1.56 * $paths.length;\n\tlet intervalId = null;\n\tlet animInterval = 1;\n\tlet progress = 0;\n\tlet elapsedTime = 0;\n\tlet path = null;\n\tlet pathAnimTime = 0;\n\tlet linearScrubValue = 0;\n\tlet motionBlurAmount = 0.02; \n\tlet currentPathIndex = 0;\n\tlet pathStartTime = 0;\n\tlet shouldRepeatPath = true;\n\tlet robotLiveAngle = 0;\n\n\tfunction playPath() {\n\t\tif (isPlaying) return;\n\t\tisPlaying = true;\n\t\n\t\tcurrentPathIndex = isStartingFromBeginning ? 0 : Math.floor(scrubValue / 100 * $paths.length);\n\t\tpathStartTime = Date.now() - (isStartingFromBeginning ? 0 : (scrubValue % (100 / $paths.length)) / 100 * animTime * 1000);\n\n\t\tif (wasPaused) {\n\t\t\tpathStartTime = Date.now() - (progress * pathAnimTime * 1000);\n\t\t}\n\n\t\tintervalId = setInterval(() => {\n\t\t\telapsedTime = (Date.now() - pathStartTime) / 1000;\n\t\t\tpath = $paths[currentPathIndex];\n\t\t\tpathAnimTime = animTime / $paths.length;\n\t\t\tprogress = elapsedTime / pathAnimTime;\n\n\t\t\tlinearScrubValue = ((currentPathIndex + progress) / $paths.length) * 100;\n\n\t\t\tif (progress < 0.5) {\n\t\t\t\tprogress = 2 * progress * progress;\n\t\t\t} else {\n\t\t\t\tprogress = -1 + (4 - 2 * progress) * progress;\n\t\t\t}\n\n\t\t\tscrubValue = ((currentPathIndex + progress) / $paths.length) * 100;\n\t\t\tupdateRobotPosition();\n\n\t\t\tif (elapsedTime >= pathAnimTime) {\n\t\t\t\tif (currentPathIndex + 1 >= $paths.length) {\n\t\t\t\t\tif (shouldRepeatPath) {\n\t\t\t\t\t\tcurrentPathIndex = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpausePath();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcurrentPathIndex++;\n\t\t\t\t}\n\t\t\t\tpathStartTime = Date.now();\n\t\t\t}\n\t\t}, animInterval);\n\t}\n\n\tfunction updateRobotPosition() {\n\t\tlet totalPoints = 0;\n\t\t$paths.forEach(path => {\n\t\t\ttotalPoints += path.bezierCurvePoints.length;\n\t\t});\n\n\t\tlet accumulatedPoints = 0;\n\t\tfor (let path of $paths) {\n\t\t\tif (scrubValue <= (accumulatedPoints + path.bezierCurvePoints.length) / totalPoints * 100) {\n\t\t\t\tconst relativeScrubValue = (scrubValue - accumulatedPoints / totalPoints * 100) / (path.bezierCurvePoints.length / totalPoints * 100);\n\t\t\t\tconst pointIndex = Math.floor(relativeScrubValue * (path.bezierCurvePoints.length - 1));\n\t\t\t\tconst point = path.bezierCurvePoints[pointIndex];\n\t\t\t\tif (point) {\n\t\t\t\t\trobotX = point.x;\n\t\t\t\t\trobotY = point.y;\n\n\t\t\t\t\tconst robotElement = document.getElementById('robot');\n\t\t\t\t\tif (robotElement) {\n\t\t\t\t\t\tif (path.robotHeading === 'tangential') {\n\t\t\t\t\t\t\tconst nextPoint = path.bezierCurvePoints[Math.min(pointIndex + 1, path.bezierCurvePoints.length - 1)];\n\t\t\t\t\t\t\tconst prevPoint = path.bezierCurvePoints[Math.max(pointIndex - 1, 0)];\n\t\t\t\t\t\t\tlet angle = Math.atan2(nextPoint.y - prevPoint.y, nextPoint.x - prevPoint.x);\n\t\t\t\t\t\t\tif (path.reverse) {\n\t\t\t\t\t\t\t\tangle += Math.PI;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trobotElement.style.transform = `translate(-50%, 50%) rotate(${-angle + Math.PI / 2}rad)`;\n\t\t\t\t\t\t\trobotLiveAngle = rotationUnits === 'degrees' ? angle * (180 / Math.PI) : angle;\n\t\t\t\t\t\t} else if (path.robotHeading === 'linear') {\n\t\t\t\t\t\t\tconst startAngle = path.startAngle || 0;\n\t\t\t\t\t\t\tconst endAngle = path.endAngle || 0;\n\t\t\t\t\t\t\tconst angle = startAngle + (endAngle - startAngle) * relativeScrubValue;\n\t\t\t\t\t\t\trobotElement.style.transform = `translate(-50%, 50%) rotate(${-angle + Math.PI / 2}rad)`;\n\t\t\t\t\t\t\trobotLiveAngle = rotationUnits === 'degrees' ? angle * (180 / Math.PI) : angle;\n\t\t\t\t\t\t} else if (path.robotHeading === 'constant') {\n\t\t\t\t\t\t\tconst angle = path.constantAngle || 0;\n\t\t\t\t\t\t\trobotElement.style.transform = `translate(-50%, 50%) rotate(${-angle + Math.PI / 2}rad)`;\n\t\t\t\t\t\t\trobotLiveAngle = rotationUnits === 'degrees' ? -angle * (180 / Math.PI) : -angle;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\taccumulatedPoints += path.bezierCurvePoints.length;\n\t\t}\n\t}\n\n\tfunction pausePath() {\n\t\tisPlaying = false;\n\t\tif (intervalId) {\n\t\t\tclearInterval(intervalId);\n\t\t\tintervalId = null;\n\t\t}\n\t\twasPaused = true;\n\t\tisStartingFromBeginning = false;\n\t}\n\n\t$: {\n\t\tif (!isPlaying && wasPaused) {\n\t\t\tconst totalPaths = $paths.length;\n\t\t\tconst pathIndex = Math.floor(linearScrubValue / 100 * totalPaths);\n\t\t\tconst pathProgress = (linearScrubValue / 100 * totalPaths) - pathIndex;\n\t\t\tconst adjustedProgress = pathProgress < 0.5 ? 2 * pathProgress * pathProgress : -1 + (4 - 2 * pathProgress) * pathProgress;\n\t\t\tscrubValue = ((pathIndex + adjustedProgress) / totalPaths) * 100;\n\t\t\tcurrentPathIndex = pathIndex;\n\t\t\tprogress = adjustedProgress;\n\n\n\t\t\tupdateRobotPosition();\n\t\t}\n\t}\n\n\t$: {\n\t\tconst robotElement = document.getElementById('robot');\n\t\tif (robotElement) {\n\t\t\trobotElement.style.transition = isPlaying ? `transform ${animInterval}ms linear` : 'none';\n\t\t\trobotElement.style.filter = isPlaying ? `blur(${motionBlurAmount * 10}px)` : 'none';\n\t\t}\n\t}\n\n\n\n\tdocument.addEventListener('DOMContentLoaded', () => {\n\t\taddPath();\n\t\tgenerateBezierCurve($paths.length - 1);\n\t});\n\n\tdocument.addEventListener('mousedown', (event) => {\n\t\tconst field = document.querySelector('.field');\n\t\tconst rect = field.getBoundingClientRect();\n\t\tconst mouseX = event.clientX - rect.left;\n\t\tconst mouseY = event.clientY - rect.top;\n\n\t\tlet selectedPathId = null;\n\t\tlet selectedPointIndex = null;\n\t\tlet selectedPathId2 = null;\n\t\tlet selectedPointIndex2 = null;\n\n\t\t$paths.forEach((path) => {\n\t\t\tpath.controlPoints.forEach((point, index) => {\n\t\t\t\tconst pointX = point.x / 144 * rect.width;\n\t\t\t\tconst pointY = rect.height - (point.y / 144 * rect.height);\n\t\t\t\tconst distance = Math.sqrt((mouseX - pointX) ** 2 + (mouseY - pointY) ** 2);\n\t\t\t\tif (distance < 10) {\n\t\t\t\t\tif (selectedPathId === null && selectedPointIndex === null) {\n\t\t\t\t\t\tselectedPathId = path.id;\n\t\t\t\t\t\tselectedPointIndex = index;\n\t\t\t\t\t} else if (autoLinkPaths && selectedPathId2 === null && selectedPointIndex2 === null) {\n\t\t\t\t\t\tselectedPathId2 = path.id;\n\t\t\t\t\t\tselectedPointIndex2 = index;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tif (selectedPathId !== null && selectedPointIndex !== null) {\n\t\t\tconst movePoint = (moveEvent) => {\n\t\t\t\tconst newMouseX = moveEvent.clientX - rect.left;\n\t\t\t\tconst newMouseY = moveEvent.clientY - rect.top;\n\t\t\t\tlet newX = newMouseX / rect.width * 144;\n\t\t\t\tlet newY = 144 - (newMouseY / rect.height * 144);\n\n\t\t\t\tconst hitboxOffsetX = robotWidth / 2;\n\t\t\t\tconst hitboxOffsetY = robotLength / 2;\n\t\t\t\tnewX = Math.max(hitboxOffsetX, Math.min(144 - hitboxOffsetX, newX));\n\t\t\t\tnewY = Math.max(hitboxOffsetY, Math.min(144 - hitboxOffsetY, newY));\n\n\t\t\t\tpaths.update(paths => {\n\t\t\t\t\tconst path = paths.find(p => p.id === selectedPathId);\n\t\t\t\t\tif (path) {\n\t\t\t\t\t\tpath.controlPoints[selectedPointIndex] = { x: newX, y: newY };\n\t\t\t\t\t\tpath.bezierCurvePoints = calculateBezier(path.controlPoints, 100);\n\t\t\t\t\t}\n\t\t\t\t\tif (autoLinkPaths && selectedPathId2 !== null && selectedPointIndex2 !== null) {\n\t\t\t\t\t\tconst path2 = paths.find(p => p.id === selectedPathId2);\n\t\t\t\t\t\tif (path2) {\n\t\t\t\t\t\t\tpath2.controlPoints[selectedPointIndex2] = { x: newX, y: newY };\n\t\t\t\t\t\t\tpath2.bezierCurvePoints = calculateBezier(path2.controlPoints, 100);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn paths;\n\t\t\t\t});\n\n\t\t\t\tupdateRobotPosition();\n\t\t\t};\n\n\t\t\tconst stopMove = () => {\n\t\t\t\tdocument.removeEventListener('mousemove', movePoint);\n\t\t\t\tdocument.removeEventListener('mouseup', stopMove);\n\t\t\t};\n\n\t\t\tdocument.addEventListener('mousemove', movePoint);\n\t\t\tdocument.addEventListener('mouseup', stopMove);\n\t\t}\n\t});\n\n\tlet autoLinkPaths = true;\n\n\tfunction checkAutoLinkControlPoints() {\n\t\tif (autoLinkPaths) {\n\t\t\tpaths.update(paths => {\n\t\t\t\tfor (let i = 0; i < paths.length - 1; i++) {\n\t\t\t\t\tconst currentPath = paths[i];\n\t\t\t\t\tconst nextPath = paths[i + 1];\n\t\t\t\t\tif (currentPath.controlPoints.length > 0 && nextPath.controlPoints.length > 0) {\n\t\t\t\t\t\tconst lastPoint = currentPath.controlPoints[currentPath.controlPoints.length - 1];\n\t\t\t\t\t\tnextPath.controlPoints[0] = { ...lastPoint };\n\t\t\t\t\t\tnextPath.bezierCurvePoints = calculateBezier(nextPath.controlPoints, 100);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn paths;\n\t\t\t});\n\t\t}\n\t}\n\n\t$: {\n\t\tcheckAutoLinkControlPoints();\n\t\tupdateRobotPosition();\n\t\tgenerateBezierCurve(1);\n\t}\n\n\t\n\tfunction showCodeWindow() {\n\t\tconst codeWindow = window.open('', 'CodeWindow', 'width=600,height=400');\n\t\tlet codeContent = 'private Path ';\n\n\t\t$paths.forEach((path, index) => {\n\t\t\tcodeContent += `p${index + 1}`;\n\t\t\tif (index < $paths.length - 1) {\n\t\t\t\tcodeContent += ', ';\n\t\t\t}\n\t\t});\n\t\tcodeContent += ';\\n\\n';\n\n\t\tcodeContent += 'public void buildPaths() {\\n';\n\n\t\t$paths.forEach((path, index) => {\n\t\t\tconst points = path.controlPoints.map(point => `new Point(${point.x.toFixed(3)}, ${point.y.toFixed(3)}, Point.CARTESIAN)`).join(',\\n                ');\n\t\t\tconst bezierType = path.controlPoints.length === 2 ? 'BezierLine' : 'BezierCurve';\n\t\t\tcodeContent += `    p${index + 1} = new Path(new ${bezierType}(\\n                ${points}\\n        )\\n    );\\n\\n`;\n\n\t\t\tif (path.robotHeading === 'constant') {\n\t\t\t\tconst angle = rotationUnits === 'degrees' ? `Math.toRadians(${path.constantAngleDegrees || 0})` : `${path.constantAngleDegrees || 0}`;\n\t\t\t\tcodeContent += `    p${index + 1}.setConstantHeadingInterpolation(${angle});\\n\\n`;\n\t\t\t} else if (path.robotHeading === 'tangential') {\n\t\t\t\tcodeContent += `    p${index + 1}.setTangentHeadingInterpolation();\\n`;\n\t\t\t\tif (path.reverse) {\n\t\t\t\t\tcodeContent += `    p${index + 1}.setReversed(true);\\n\\n`;\n\t\t\t\t} else {\n\t\t\t\t\tcodeContent += `    p${index + 1}.setReversed(false);\\n\\n`;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (path.robotHeading === 'linear') {\n\t\t\t\tconst startAngle = rotationUnits === 'degrees' ? `Math.toRadians(${path.startAngleDegrees || 0})` : `${path.startAngleDegrees || 0}`;\n\t\t\t\tconst endAngle = rotationUnits === 'degrees' ? `Math.toRadians(${path.endAngleDegrees || 0})` : `${path.endAngleDegrees || 0}`;\n\t\t\t\tcodeContent += `    p${index + 1}.setLinearHeadingInterpolation(${startAngle}, ${endAngle});\\n\\n`;\n\t\t\t}\n\t\t});\n\n\t\tcodeContent += '}';\n\n\t\tcodeWindow.document.write('<pre>' + codeContent + '</pre>');\n\t\tcodeWindow.document.close();\n\t}\n\n\texport let shouldShowHitbox = writable(false);\n    export let paths = writable([]);\n\n    let offsetPaths = [];\n\n$: {\n    offsetPaths = $paths.map(path => ({\n        left: [],\n        right: [],\n        main: [],\n        color: path.color,\n        controlPoints: path.controlPoints,\n    }));\n\n    $paths.forEach((path, pathIndex) => {\n        if (path.controlPoints.length >= 2) { // ✅ Now allows both linear & Bézier paths\n            let mainPath = [];\n            \n            // ✅ Generate the hitbox ONCE\n            const { leftPath, rightPath } = generateHitboxPath(path.controlPoints, robotWidth);\n\n            for (let t = 0; t <= 1; t += 0.01) {\n                const mainPoint = getPointAt(t, path.controlPoints);\n                mainPath.push(mainPoint);\n            }\n\n            // ✅ Assign paths properly\n            offsetPaths[pathIndex].main = mainPath;\n            offsetPaths[pathIndex].left = leftPath;\n            offsetPaths[pathIndex].right = rightPath;\n        }\n    });\n}\n\n</script>\n  \n<style>\n\t* {\n\t\tfont-family: \"Nunito\", serif;\n\t\tfont-optical-sizing: auto;\n\t\tfont-weight: 600;\n\t\tfont-style: normal;\n\t}\n\n\th1 {\n\t\ttext-align: center;\n\t\tfont-size: 1rem;\n\t}\n\n\t.page-title {\n\t\tfont-size: 1.25rem;\n\t\tpadding: 0.3rem;\n\t\tmargin-left: 0.5rem;\n\t\n\t}\n\n\n\n\t.container {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\twidth: 100%;\n\t\tmin-width: 100%;\n\t\tmax-height: 85vh;\n\t}\n\n\t.container > * {\n\t\tmargin: 0.3rem;\n\t\tbox-shadow: 4px 4px 8px rgba(0, 0, 0, 0.3);\n\t\tborder-radius: 10px;\n\t\t\n\t}\n\n\t.field {\n\t\tposition: relative;\n\t\twidth: 80vh;\n\t\theight: 80vh;\n\t\tmax-width: 80vh;\n\t\tmax-height: 80vh;\n\t\tmin-width: 40vh;\n\t\tmin-height: 40vh;\n\t\tbackground: url('https://jwhof.github.io/jpather/good-field-image.png') no-repeat center center;\n\t\tbackground-size: cover;\n\t\tborder: 1px solid #ccc;\n\t}\n\n\t.point {\n\t\tposition: absolute;\n\t\twidth: 2%;\n\t\theight: 2%;\n\t\tborder-radius: 50%;\n\t\ttransform: translate(-50%, 50%);\n\t\tz-index: 2;\n\t}\n\n\t.point:hover {\n\t\twidth: 3%;\n\t\theight: 3%;\n\t\tcursor: grab;\n\t}\n\n\t.curve {\n\t\tstroke-width: 0.7;\n\t\tfill: none;\n\t\tposition: absolute;\n\t\tz-index: 3;\n\t}\n\n\t\n\n\t.robot-options-menu {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: left;\n\t\tpadding: 1rem;\n\t\tflex-grow: 1;\n\t\theight: 45vh;\n\t}\n\n\t.robot-options {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tflex-direction: row;\n\t\tborder:none;\n\t}\n\n\n\t.robot-options-menu > * {\n\t\tmargin: 0.5rem;\n\t}\n\n\t.section-title {\n\t\tfont-size: 1.25rem;\n\t\tfont-weight: bold;\n\t\tmargin-top: 0;\n\t}\n\n\t.paths {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: left;\n\t\talign-items: flex-start;\n\t\tpadding: 1rem;\n\t\tflex-grow: 1;\n\t\tmax-height: 80vh;\n\t\toverflow-y: auto;\n\t}\n\n\t.paths > * {\n\t\tmargin: 0.5rem;\n\t}\n\n\t.header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: 0.1rem;\n\t\tbackground: rgb(255, 255, 255);\n\t\theight: 2.5rem;\n\t}\n\n\tbutton {\n\t\tbackground: #B1F0F7;\n\t\tborder: none;\n\t\tpadding: 0.5rem 1rem;\n\t\tborder-radius: 5px;\n\t\tcursor: pointer;\n\t\tfont-size: 0.75rem;\n\t}\n\n\tbutton:hover {\n\t\tbackground: #8EDCE6 !important;\n\t}\n\n\t.path {\n\t\tmargin: 0rem;\n\t\tmargin-bottom: 0.3rem;\n\t\tborder-radius: 10px;\n\t\tborder: 4px solid;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\twidth: calc(100% - 8px); /* Adjust width to prevent overflow */\n\t}\n\n\t.path-header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tflex-direction: row;\n\t\tborder:none;\n\t\theight: 2rem;\n\t\tmargin: 0.5rem;\n\t}\n\n\t.path-control-points {\n\t\tdisplay: block;\n\t\tmargin: 0.5rem;\n\t}\n\n\t\n\t.color-circle {\n\t\t-webkit-appearance: none;\n\t\t-moz-appearance: none;\n\t\tappearance: none;\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tborder: none;\n\t\tcursor: pointer;\n\t\tmargin: 0.75rem;\n\t\t\n\t}\n\n\t.color-circle::-webkit-color-swatch {\n\t\tborder-radius: 20px;\n\t\tborder: none;\n\t}\n\n\t.path-and-color {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t.add-and-remove {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t.add-and-remove > svg {\n\t\tcursor: pointer;\n\t\tmargin: 0.1rem;\n\t}\n\n\t.path-and-color > .path-title {\n\t\tfont-weight: bold;\n\t}\n\n\t.control-point-box > label {\n\t\tfont-size: 0.75rem;\n\t\tfont-weight: 750;\n\t}\n\n\t.control-point-mini-box {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tflex-direction: row;\n\t}\n\n\t.control-point-mini-box-x > input {\n\t\tfont-size: 0.75rem;\n\t\tfont-weight: 750;\n\t\tmargin:0rem;\n\t}\n\t\n\t\n\t.control-point-mini-box-y > input {\n\t\tfont-size: 0.75rem;\n\t\tfont-weight: 750;\n\t\tmargin:0rem;\n\t}\n\t\n\n\t.control-point-mini-box-x, .control-point-mini-box-y {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin: 0.1rem;\n\t\tflex-direction: row;\n\t}\n\t.control-point-mini-box-x > label {\n\t\tfont-size: 0.75rem;\n\t\tfont-weight: 750;\n\t}\n\t\n\t.control-point-mini-box-y > label {\n\t\tfont-size: 0.75rem;\n\t\tfont-weight: 750;\n\t}\n\n\t.control-point-mini-box-heading > label {\n\t\tfont-size: 0.75rem;\n\t\tfont-weight: 750;\n\t}\n\n\t.control-point-mini-box-heading {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin: 0.1rem;\n\t\tflex-direction: row;\n\t\tjustify-content: space-between;\n\t\twidth: 100%;\n\t}\n\n\t.control-point-mini-box-heading > input {\n\t\tfont-size: 0.75rem;\n\t\tfont-weight: 750;\n\t\tmargin:0rem;\n\t}\n\n\t.cp-x, .cp-y, .cp-heading {\n\t\tmargin: 0.3rem;\n\t\tfont-weight: 400 !important;\n\t}\n\n\t.robot-options > label {\n\t\tfont-size:0.75rem;\n\t\tmargin-top: 0rem;\n\t\tmargin-bottom: 0rem;\n\t}\n\n\t.robot-options > input {\n\t\tfont-size: 0.75rem;\n\t}\n\n\t.scrubbing-bar {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tbackground: white;\n\t\tpadding: 0.5rem;\n\t\tborder-radius: 5px;\n\n\t\tmargin: 0.3rem;\n\t\tbox-shadow: 4px 4px 8px rgba(0, 0, 0, 0.3);\n\t\tborder-radius: 10px;\n\t\t\n\t}\n\n\t.scrubbing-bar input[type=\"range\"] {\n\t\tmargin: 0.3rem;\t\t\n\t\t-webkit-appearance: none;\n\t\tappearance: none;\n\t\tpadding: 0rem;\n\t\tbackground: rgb(239, 238, 238);\n\t\tborder-radius: 12.5px;\n\t\toutline: none;\n\t\twidth: 100%;\n\t\tborder: transparent;\n\t\talign-items: center;\n\t}\n\n\t.scrubbing-bar input[type=\"range\"]::-webkit-slider-thumb {\n\t\t-webkit-appearance: none;\n\t\tappearance: none;\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tbackground: #B1F0F7;\n\t\tborder-radius: 50%;\n\t\tcursor: pointer;\n\t}\n\n\t.scrubbing-bar input[type=\"range\"]::-moz-range-thumb {\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tbackground: #B1F0F7;\n\t\tborder-radius: 50%;\n\t\tcursor: pointer;\n\t}\n\n\t.scrubbing-bar input[type=\"range\"]::-ms-thumb {\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tbackground: #B1F0F7;\n\t\tborder-radius: 50%;\n\t\tcursor: pointer;\n\t}\n\n\t.play-button {\n\t\tcursor: pointer;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t.footer {\n\t\twidth: 100%;\n\t}\n\n\t.section-title {\n\t\tmargin-bottom: 0.5rem;\n\t\tmargin-top: 0.5rem;\n\t}\n\n\t.advanced-options {\n\t\tdisplay: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 0.5rem;\n    width: 100%;\n\t}\n\n\t.advanced-options > label {\n\t\tfont-size:0.75rem;\n\t\tmargin: 0.2rem;\n\t}\n\n\t.advanced-options > input {\n\t\tfont-size: 0.75rem;\n\t\tmargin: 0rem;\n\t}\n\n\t#field-options {\n\t\tmargin-top: 1rem;\n\t}\n\n\t#advanced-options {\n\t\tmargin-top: 1rem;\n\t}\n\n\t#robot {\n\t\tposition: absolute;\n\t\ttransform: translate(-50%, 50%) rotate(90deg);\n\t\tz-index: 0;\n\t\tuser-select: none;\n\t}\n\n\timg {\n\t\tposition: absolute;\n\t\ttransform: translate(-50%, 50%);\n\t\tz-index: 0;\n\t}\n\n\tpolyline {\n\t\tposition: absolute;\n\t\tz-index: 1;\n\t}\n\n\t#robotUnits {\n\t\tfont-size: 0.75rem;\n\t\twidth: auto;\n\t}\n\t\n\t.standard-input-box {\n\t\twidth: 75px;\n\t}\n\n\t.start-pos-box {\n\t\twidth: 50px;\n\t}\n\n\t#robot-heading {\n\t\tfont-size: 0.75rem;\n\t\twidth: auto;\n\t\tmargin-bottom: 0rem;\n\t\theight:27.59px;\n\t\tmargin-left:10px;\n\t}\n\n\t#reverse {\n\t\tmargin-bottom: 0rem;\n\t}\n\n\t.control-point-mini-box > label {\n\t\tfont-size: 0.75rem;\n\t\tmargin: 4px;\n\t\tmargin-top: 0px;\n\t\tmargin-bottom: 0px;\n\t\tfont-weight: 750;\n\t}\n\n\t#start-angle, #end-angle, #constant-angle {\n\t\tfont-size:0.75rem;\n\t\tfont-weight: 750;\n\t\twidth: 65px;\n\t\tmargin-bottom: 0rem;\n\t\tmargin-left: 4px;\n\t}\n\n\t#rotationUnits {\n\t\tfont-size: 0.75rem;\n\t\twidth: auto;\n\t\tmargin-bottom: 0rem;\n\t}\n\n\t#code-window-btn {\n\t\tmargin: 4px;\n\t\tcursor:pointer;\n\t}\n\n\t.export-import {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tflex-direction: row;\n\t}\n\n\t.export-import > * {\n\t\tmargin: 4px;\n\t}\n\n\t#live-pos {\n\t\tflex-direction: column;\n\t\tjustify-content: left;\n\t\talign-items: left;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: flex-start;\n\t}\n\n\t.cp-x-y {\n\t\tflex-direction: row;\n\t\tjustify-content: left;\n\t\talign-items: left;\n\t\tdisplay: flex;\n\t\talign-items: flex-start;\n\t}\n\n\t.adv-options {\n\t\tfont-size:0.75rem;\n\t\tmargin: 0.2rem;\n\t}\n\n\t.start-pos-container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: left;\n\t\talign-items: left;\n\t}\n\n\t.current-path {\n\t\tdisplay: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 0.3rem;\n    width: 100%;\n\t}\n\n</style>\n\n<div>\n\t<div class=\"header\">\n\t\t<h1 class=\"page-title\">JPather</h1>\n\t\t<div class=\"export-import\">\n\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t<svg id=\"code-window-btn\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"black\" on:click={showCodeWindow}><path d=\"M160-160q-33 0-56.5-23.5T80-240v-480q0-33 23.5-56.5T160-800h640q33 0 56.5 23.5T880-720v480q0 33-23.5 56.5T800-160H160Zm0-80h640v-400H160v400Zm140-40-56-56 103-104-104-104 57-56 160 160-160 160Zm180 0v-80h240v80H480Z\"/></svg>\n\t\t\t<button on:click={importControlPoints} style=\"user-select:none;\">Import Control Points</button>\n\t\t\t<button on:click={exportControlPoints} style=\"user-select:none;\">Export Control Points</button>\n\t\t</div>\n\t</div>\n\n\t<div class=\"main-content\">\n\t\n\t\t<div class=\"container\">\n\t\t\t<div class=\"settings-column\">\n\t\t\t\t<div class=\"robot-options-menu\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2 class=\"section-title\" style=\"user-select:none;\">Robot Options</h2>\n\n\t\t\t\t\t\t<div class=\"robot-options\">\n\t\t\t\t\t\t\t<label for=\"robotUnits\" style=\"user-select:none;\">Units:</label>\n\t\t\t\t\t\t\t<select id=\"robotUnits\" class=\"standard-input-box\" bind:value={robotUnits}>\n\t\t\t\t\t\t\t\t<option value=\"inches\">Inches</option>\n\t\t\t\t\t\t\t\t<option value=\"cm\">Centimeters</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t<div class=\"robot-options\">\n\t\t\t\t\t\t\t<label for=\"robot-length\" style=\"user-select:none;\">Robot Length:</label>\n\t\t\t\t\t\t\t<input id=\"robot-length\" class=\"standard-input-box\" type=\"number\" step=\"1\" bind:value={displayLength} on:input={(e) => updateRobotLength(parseFloat(e.target.value))} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div class=\"robot-options\">\n\t\t\t\t\t\t\t<label for=\"robot-width\" style=\"user-select:none;\">Robot Width:</label>\n\t\t\t\t\t\t\t<input id=\"robot-width\" class=\"standard-input-box\" type=\"number\" step=\"1\" bind:value={displayWidth} on:input={(e) => updateRobotWidth(parseFloat(e.target.value))} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\n\n\t\t\t\t\t\t<h2 id=\"field-options\" class=\"section-title\" style=\"user-select:none;\">Field Options</h2>\n\n\t\t\t\t\t\t<!-- svelte-ignore a11y-label-has-associated-control -->\n\n\t\t\t\t\t\t<div class=\"start-pos-container\">\n\t\t\t\t\t\t<label class=\"adv-options\" style=\"user-select:none;\">Starting Position:</label>\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div class=\"control-point-mini-box\">\n\t\t\t\t\t\t\t<div class=\"control-point-mini-box-x\">\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-label-has-associated-control -->\n\t\t\t\t\t\t\t\t<label class=\"cp-x\" style=\"user-select:none;\">X:</label>\n\t\t\t\t\t\t\t\t{#if $paths.length > 0}\n\t\t\t\t\t\t\t\t<input class=\"start-pos-box\" type=\"number\" step=\"1\" bind:value={$paths[0].controlPoints[0].x} on:input={(e) => { $paths[0].controlPoints[0].x = parseFloat(e.target.value); generateBezierCurve(0); paths.set($paths); updateRobotPosition(); }}/>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"control-point-mini-box-y\">\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-label-has-associated-control -->\n\t\t\t\t\t\t\t\t<label class=\"cp-x\" style=\"user-select:none;\">Y:</label>\n\t\t\t\t\t\t\t\t{#if $paths.length > 0}\n\t\t\t\t\t\t\t\t<input class=\"start-pos-box\" type=\"number\" step=\"1\" bind:value={$paths[0].controlPoints[0].y} on:input={(e) => { $paths[0].controlPoints[0].y = parseFloat(e.target.value); generateBezierCurve(0); paths.set($paths); updateRobotPosition(); }}/>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<!-- svelte-ignore a11y-label-has-associated-control -->\n\t\t\t\t\t\t<label class=\"adv-options\" style=\"user-select:none;\">Live Position:</label>\n\t\t\t\t\t\t<div id=\"live-pos\" class=\"control-point-mini-box\">\n\t\t\t\t\t\t\t<div class=\"cp-x-y\">\n\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box-x\">\n\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-label-has-associated-control -->\n\t\t\t\t\t\t\t\t\t<label class=\"cp-x\" style=\"user-select:none;\">X:</label>\n\t\t\t\t\t\t\t\t\t<input class=\"start-pos-box\" type=\"number\" step=\"0.001\" bind:value={robotX} readonly />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box-y\">\n\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-label-has-associated-control -->\n\t\t\t\t\t\t\t\t\t<label class=\"cp-y\" style=\"user-select:none;\">Y:</label>\n\t\t\t\t\t\t\t\t\t<input class=\"start-pos-box\" type=\"number\" step=\"0.001\" bind:value={robotY} readonly />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box-heading\">\n\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-label-has-associated-control -->\n\t\t\t\t\t\t\t\t\t<label class=\"cp-heading\" style=\"user-select:none;\">θ:</label>\n\t\t\t\t\t\t\t\t\t<input class=\"start-pos-box\" type=\"number\" step=\"0.001\" value={Math.round(robotLiveAngle)} readonly />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"control-point-mini-box-x current-path\">\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-label-has-associated-control -->\n\t\t\t\t\t\t\t\t<label class=\"cp-x\" style=\"user-select:none;font-weight:600;\">Current Path:</label>\n\t\t\t\t\t\t\t\t<input class=\"start-pos-box\" type=\"number\" step=\"0.001\" value={currentPathIndex+1} readonly />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<h2 id=\"advanced-options\" class=\"section-title\" style=\"user-select:none;\">Advanced Options</h2>\n\t\t\t\t\t\t<div class=\"advanced-options\">\n\t\t\t\t\t\t\t<label for=\"field-length\" style=\"user-select:none;\">Show Robot Hitbox: </label>\n\t\t\t\t\t\t\t<input id=\"auto-link-paths\" type=\"checkbox\" bind:checked={$shouldShowHitbox} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"advanced-options\">\n\t\t\t\t\t\t\t<label for=\"field-length\" style=\"user-select:none;\">Infinite Path Looping: </label>\n\t\t\t\t\t\t\t<input id=\"auto-link-paths\" type=\"checkbox\" bind:checked={shouldRepeatPath} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"advanced-options\">\n\t\t\t\t\t\t\t<label for=\"field-length\" style=\"user-select:none;\">Auto-link Paths:</label>\n\t\t\t\t\t\t\t<input id=\"auto-link-paths\" type=\"checkbox\" bind:checked={autoLinkPaths} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"advanced-options\">\n\t\t\t\t\t\t\t<label for=\"rotationUnits\" style=\"user-select:none;\">Rotational Units:</label>\n\t\t\t\t\t\t\t<select id=\"rotationUnits\" class=\"standard-input-box\" bind:value={rotationUnits}>\n\t\t\t\t\t\t\t\t<option value=\"degrees\">Degrees</option>\n\t\t\t\t\t\t\t\t<option value=\"radians\">Radians</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"field\">\n\t\t\t\t{#each $paths as path}\n\t\t\t\t\t{#each path.controlPoints as { x, y }}\n\t\t\t\t\t\t<div class=\"hover-point\">\n\t\t\t\t\t\t\t<div class=\"point\" style=\"left: {x / 144 * 100}%; bottom: {y / 144 * 100}%; background: {path.color};\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/each}\n\t\t\t\t{/each}\n\t\t\t\n\t\t\t\t<!-- Display Robot Image -->\n\t\t\t\t{#if $paths.length > 0}\n\t\t\t\t\t<img src=\"./assets/robot.png\" alt=\"Robot\" id=\"robot\"\n\t\t\t\t\t\tstyle=\"\n\t\t\t\t\t\t\twidth: {robotWidth / 144 * 100}%;\n\t\t\t\t\t\t\theight: {robotLength / 144 * 100}%;\n\t\t\t\t\t\t\tleft: {(robotX / 144) * 100}%;\n\t\t\t\t\t\t\tbottom: {(robotY / 144) * 100}%;\n\t\t\t\t\t\t\tuser-select: none;\n\t\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\t\"\n\t\t\t\t\t/>\n\t\t\t\t{/if}\n\t\t\t\n\n\t\t\t\t<svg viewBox=\"0 0 144 144\" width=\"100%\" height=\"100%\" style=\"position: absolute; top: 0; left: 0;\">\n    \n\t\t\t\t\t<!-- Filled Hitbox (Shaded Polygon) -->\n\t\t\t\t\t{#if $shouldShowHitbox}\n\t\t\t\t\t\t{#each offsetPaths as path}\n\t\t\t\t\t\t\t{#if path.left.length > 0 && path.right.length > 0}\n\t\t\t\t\t\t\t\t<polygon \n\t\t\t\t\t\t\t\t\tpoints=\"{\n\t\t\t\t\t\t\t\t\t\tpath.left.map(p => `${p.x},${144 - p.y}`).join(' ') + ' ' +\n\t\t\t\t\t\t\t\t\t\tpath.right.reverse().map(p => `${p.x},${144 - p.y}`).join(' ')\n\t\t\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t\t\t\tfill=\"rgba(255, 255, 255, 0.2)\"\n\t\t\t\t\t\t\t\t\tstroke=\"none\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<path d=\"M {path.left.map(p => `${p.x},${144 - p.y}`).join(' ')}\"\n\t\t\t\t\t\t\t\t\tstroke={path.color} fill=\"none\" stroke-width=\"1\" opacity=\"0.4\" />\n\t\t\t\t\t\t\t\t<path d=\"M {path.right.map(p => `${p.x},${144 - p.y}`).join(' ')}\"\n\t\t\t\t\t\t\t\t\tstroke={path.color} fill=\"none\" stroke-width=\"1\" opacity=\"0.4\" />\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t{/if}\n\t\t\t\t\n\t\t\t\t\t<!-- Main Bézier Curve -->\n\t\t\t\t\t{#each offsetPaths as path}\n\t\t\t\t\t\t{#if path.main.length > 0}\n\t\t\t\t\t\t\t<path d=\"M {path.main.map(p => `${p.x},${144 - p.y}`).join(' ')}\"\n\t\t\t\t\t\t\t\t  stroke={path.color} fill=\"none\" stroke-width=\"1\" />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t{/each}\n\t\t\t\t\n\t\t\t\t</svg>\n\t\t\t\t\n\t\t\t\t\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"paths\">\n\t\t\t\t{#each $paths as path}\n\t\t\t\t\t<div class=\"path\" style=\"border-color: {path.color};\">\n\t\t\t\t\t\t<div class=\"path-header\">\n\t\t\t\t\t\t\t<div class=\"path-and-color\">\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-click-events-have-k</div>ey-events -->\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-no-static-element-interactions -->\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill={(!(path.id == 0 || path.id == $paths.length - 1)) ? \"black\" : \"gray\"} style=\"cursor: {(!(path.id == 0 || path.id == $paths.length - 1)) ? 'pointer' : 'default'}\" on:click={() => { if (!(path.id == 0 || path.id == $paths.length - 1)) { const temp = $paths[path.id + 1]; $paths[path.id + 1] = { ...$paths[path.id], id: path.id + 1 }; $paths[path.id] = { ...temp, id: path.id }; paths.set($paths); checkAutoLinkControlPoints();}}}><path d=\"M480-240 240-480l56-56 144 144v-368h80v368l144-144 56 56-240 240Z\"/></svg>\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-no-static-element-interactions -->\n\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill={!(path.id == 0 || path.id == 1) ? \"black\" : \"gray\"} style=\"cursor: {!(path.id == 0 || path.id == 1) ? 'pointer' : 'default'}\" on:click={() => { if (!(path.id == 0 || path.id == 1)) { const temp = $paths[path.id - 1]; $paths[path.id - 1] = { ...$paths[path.id], id: path.id - 1 }; $paths[path.id] = { ...temp, id: path.id }; paths.set($paths); checkAutoLinkControlPoints();}}}><path d=\"M440-240v-368L296-464l-56-56 240-240 240 240-56 56-144-144v368h-80Z\"/></svg>\n\t\t\t\t\t\t\t\t<input type=\"color\" class=\"color-circle\" style=\"background-color: {path.color};\" bind:value={path.color} on:input={() => updatePathColor(path.id, path.color)} />\n\t\t\t\t\t\t\t\t<p class=\"path-title\" style=\"user-select:none;\">Path {path.id + 1}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<!-- svelte-ignore a11y-no-static-element-interactions -->\n\t\t\t\t\t\t\t<!-- svelte-ignore a11y-no-static-element-interactions -->\n\t\t\t\t\t\t\t<div class=\"add-and-remove\">\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill={($paths.length > 1) ? \"#FF474D\" : \"gray\"} on:click={() => { if ($paths.length > 1) deletePath(path.id); }} style=\"cursor: {($paths.length > 1) ? 'pointer' : 'default'};\"><path d=\"M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z\"/></svg>\n\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#90EE90\" on:click={() => addControlPointToPathWithIndex(path.id, path.controlPoints.length - 1)} on:keydown={(e) => { if (e.key === 'Enter') addControlPointToPathWithIndex(path.id, path.controlPoints.length - 1); }} style=\"cursor: pointer;\"><path d=\"M440-280h80v-160h160v-80H520v-160h-80v160H280v80h160v160Zm40 200q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z\"/></svg>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"path-control-points\">\n\t\t\t\t\t\t\t\t{#each path.controlPoints as { x, y }, i}\n\t\t\t\t\t\t\t\t\t<div class=\"control-point-box\">\n\t\t\t\t\t\t\t\t\t\t{#if (i == 0)}\n\t\t\t\t\t\t\t\t\t\t\t<label for=\"control-point-{path.id}-{i}\" style=\"user-select:none;\">Endpoint:</label>\n\t\t\t\t\t\t\t\t\t\t{:else if (i > 0 && i!=path.controlPoints.length-1)}\n\t\t\t\t\t\t\t\t\t\t\t<label for=\"control-point-{path.id}-{i}\" style=\"user-select:none;\">Control Point {i}:</label>\n\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t{#if i > 0 && i!=path.controlPoints.length-1}\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box-x\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"cp-x\" for=\"control-point-{path.id}-{i}\" style=\"user-select:none;\">X:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"cp-input\" class=\"standard-input-box\" type=\"number\" step=\"1\" value={path.controlPoints[i].x} on:input={(e) => { path.controlPoints[i].x = parseFloat(e.target.value); generateBezierCurve(path.id); paths.set($paths); }} />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box-y\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"cp-y\" for=\"control-point-{path.id}-{i}-y\" style=\"user-select:none;\">Y:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"cp-input\" class=\"standard-input-box\" type=\"number\" step=\"1\" value={path.controlPoints[i].y} on:input={(e) => { path.controlPoints[i].y = parseFloat(e.target.value); generateBezierCurve(path.id); paths.set($paths); }} />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t{#if (i > 0)}\n\t\t\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-no-static-element-interactions -->\n\t\t\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\n\n\t\t\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#FF474D\" on:click={() => { if (path.controlPoints.length > 2) { path.controlPoints.splice(i, 1); generateBezierCurve(path.id); paths.set($paths); } }} style=\"cursor: pointer;\"><path d=\"M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z\"/></svg>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{:else if (i==0)}\n\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box-x\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"cp-x\" for=\"control-point-{path.id}-{i}\" style=\"user-select:none;\">X:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"control-point-{path.id}-{i}\" class=\"standard-input-box\" type=\"number\" step=\"1\" value={path.controlPoints[path.controlPoints.length-1].x} on:input={(e) => { path.controlPoints[path.controlPoints.length-1].x = parseFloat(e.target.value); generateBezierCurve(path.id); paths.set($paths); }} />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box-y\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"cp-y\" for=\"control-point-{path.id}-{i}-y\" style=\"user-select:none;\">Y:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"control-point-{path.id}-{i}-y\" class=\"standard-input-box\" type=\"number\" step=\"1\" value={path.controlPoints[path.controlPoints.length-1].y} on:input={(e) => { path.controlPoints[path.controlPoints.length-1].y = parseFloat(e.target.value); generateBezierCurve(path.id); paths.set($paths); }} />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"robot-heading\" class=\"standard-input-box\" bind:value={path.robotHeading} on:change={() => generateBezierCurve(path.id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"constant\">Constant</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"tangential\">Tangential</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"linear\">Linear</option>\n\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\n\t\t\t\t\t\t\t\t\t\t\t{#if path.robotHeading === 'linear'}\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"start-angle\" class=\"standard-input-box\" type=\"number\" step=\"0.01\" bind:value={path.startAngleDegrees}  on:input={() => updateRobotPosition()}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"end-angle\" class=\"standard-input-box\" type=\"number\" step=\"0.01\" bind:value={path.endAngleDegrees} on:input={() => updateRobotPosition()}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t{:else if path.robotHeading === 'tangential'}\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"reverse\" style=\"user-select:none;\">Reverse:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"reverse\" type=\"checkbox\" bind:checked={path.reverse} on:input={() => updateRobotPosition()}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t{:else if path.robotHeading === 'constant'}\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"constant-angle\" class=\"standard-input-box\" type=\"number\" step=\"0.01\" bind:value={path.constantAngleDegrees} on:input={() => updateRobotPosition()}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t{/each}\n\n\t\t\t\t<button on:click={() => {addPath(); generateBezierCurve($paths.length - 1);}} style=\"user-select:none;\">Add Path</button>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"footer\">\n\t\t\t<div class=\"scrubbing-bar\">\n\t\t\t\t<div class=\"play-button\">\n\t\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t\t\t<!-- svelte-ignore a11y-no-static-element-interactions -->\n\t\t\t\t\t{#if !isPlaying}\n\t\t\t\t\t \t<!-- svelte-ignore a11y-no-static-element-interactions -->\n\t\t\t\t\t \t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#90EE90\" on:click={playPath}><path d=\"M320-200v-560l440 280-440 280Zm80-280Zm0 134 210-134-210-134v268Z\"/></svg>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#FF474D\" on:click={pausePath}><path d=\"M520-200v-560h240v560H520Zm-320 0v-560h240v560H200Zm400-80h80v-400h-80v400Zm-320 0h80v-400h-80v400Zm0-400v400-400Zm320 0v400-400Z\"/></svg>\n\t\t\t\t\t{/if}\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<input type=\"range\" id=\"scrub\" min=\"0\" max=\"100\" step=\"0.001\" bind:value={linearScrubValue} on:input={updateRobotPosition} />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","subscribe","store","callbacks","unsub","unsubscribe","set_store_value","ret","value","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","select_option","select","mounting","option","__value","selected","undefined","selectedIndex","select_value","selected_option","querySelector","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","e","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","destroy_component","filtered","targets","c","indexOf","flush_render_callbacks","on_destroy","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","block","delete","local","customElement","m","new_on_destroy","map","filter","mount_component","SvelteComponent","$destroy","this","$on","type","index","splice","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","Path","constructor","id","controlPoints","color","getRandomBrightColor","robotHeading","bezierCurvePoints","calculateBezier","Math","floor","random","steps","curve","t","deCasteljau","points","newPoints","x","y","addControlPoint","updateControlPoint","setColor","setHeading","bezierCache","getCachedBezier","JSON","stringify","getPointAt","get","getNormalAt","tangent","derivatives","getDerivativeAt","sqrt","getOffsetPointAt","width","point","normal","left","right","div0","div1","each_value_5","element_src","url","href","img","join","reverse","func_1","path0","path0_d_value","func_2","path0_stroke_value","path1","path1_d_value","func_3","path1_stroke_value","polygon","if_block","create_if_block_11","path_1","path_1_d_value","main","func_4","path_1_stroke_value","create_if_block_9","label","create_if_block_4","create_if_block_5","create_if_block_6","select_change_handler","div2","label0","input0","label1","input1","option0","option1","option2","input0_value_value","input1_value_value","svg","create_if_block_2","div","constantAngleDegrees","checked","startAngleDegrees","endAngleDegrees","create_if_block_7","create_if_block_8","create_if_block_1","create_if_block_3","each_value_1","svg0","svg0_fill_value","svg2","svg2_fill_value","div4","svg1","path2","svg3","path3","div3","set_data","t4","t4_value","create_if_block_14","create_if_block_13","create_if_block_12","create_if_block_10","create_if_block","call","select0","round","input5","input5_value_value","select1","div29","h1","button0","button1","div28","div24","div21","div20","div19","h20","label2","h21","div8","label3","div7","div5","label4","div6","label5","label6","div14","div12","div9","label7","input2","div10","label8","input3","div11","label9","input4","div13","label10","h22","div15","label11","input6","div16","label12","input7","div17","label13","input8","div18","label14","option3","div22","div23","button2","div27","div26","div25","input9","input4_value_value","robotLength","robotWidth","robotUnits","rotationUnits","updateRobotLength","newValue","parseFloat","$$invalidate","toFixed","updateRobotWidth","generateBezierCurve","pathId","paths","path","find","addPath","newPath","lastPath","lastControlPoint","angle","PI","distance","cos","sin","addControlPointToPathWithIndex","insertIndex","updatePathColor","deletePath","updatedPaths","autoLinkPaths","previousPath","nextPath","scrubValue","robotX","robotY","isPlaying","wasPaused","isStartingFromBeginning","intervalId","progress","elapsedTime","pathAnimTime","linearScrubValue","currentPathIndex","pathStartTime","shouldRepeatPath","robotLiveAngle","updateRobotPosition","totalPoints","$paths","accumulatedPoints","relativeScrubValue","pointIndex","robotElement","getElementById","nextPoint","min","prevPoint","max","atan2","transform","startAngle","endAngle","constantAngle","pausePath","clearInterval","rect","getBoundingClientRect","mouseX","clientX","mouseY","clientY","top","selectedPathId","selectedPointIndex","selectedPathId2","selectedPointIndex2","pointX","pointY","height","movePoint","moveEvent","newMouseX","newMouseY","newX","newY","hitboxOffsetX","hitboxOffsetY","stopMove","checkAutoLinkControlPoints","currentPath","lastPoint","shouldShowHitbox","offsetPaths","displayLength","displayWidth","angleConversionFactor","pathIndex","mainPath","leftPath","rightPath","console","warn","log","offsetPoints","generateHitboxPath","mainPoint","animTime","totalPaths","pathProgress","adjustedProgress","transition","json","blob","Blob","URL","createObjectURL","link","download","click","accept","onchange","async","file","files","parse","Date","now","setInterval","codeWindow","window","open","codeContent","bezierType","write","close","$shouldShowHitbox","temp","each_value","path_index","body"],"mappings":"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","x_google_ignoreList":[0,1]}