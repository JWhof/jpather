{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/utils/Path.js","../../src/stores.js","../../src/utils/bezier.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","class Path {\n    constructor(id, controlPoints = [], color = this.getRandomBrightColor(), robotHeading = 'constant') {\n        this.id = id;\n        this.controlPoints = controlPoints;\n        this.color = color;\n        this.robotHeading = robotHeading;\n        this.bezierCurvePoints = this.calculateBezier(); // calculate initial bezier curve points\n    }\n\n    static revive(obj) {\n        const path = new Path(obj.id);\n        path.controlPoints = obj.controlPoints;\n        path.color = obj.color;\n        path.robotHeading = obj.robotHeading;\n        path.startAngleDegrees = obj.startAngleDegrees;\n        path.endAngleDegrees = obj.endAngleDegrees;\n        path.constantAngleDegrees = obj.constantAngleDegrees;\n        path.reverse = obj.reverse;\n        path.bezierCurvePoints = obj.bezierCurvePoints; // restore bezier curve points\n        return path;\n    }\n\n    getRandomBrightColor() {\n        const r = Math.floor(Math.random() * 128 + 128);\n        const g = Math.floor(Math.random() * 128 + 128);\n        const b = Math.floor(Math.random() * 128 + 128);\n        return `rgb(${r}, ${g}, ${b})`; // return a random bright color\n    }\n\n    calculateBezier() {\n        if (this.controlPoints.length < 2) return [];\n        let curve = [];\n        this.subdivideAdaptive(this.controlPoints, 0, 1, curve); // start adaptive subdivision\n        return curve;\n    }\n\n    subdivideAdaptive(controlPoints, tStart, tEnd, curve, threshold = 0.001) {\n        const midT = (tStart + tEnd) / 2;\n        const pStart = this.deCasteljau(controlPoints, tStart);\n        const pEnd = this.deCasteljau(controlPoints, tEnd);\n        const pMid = this.deCasteljau(controlPoints, midT);\n\n        const linearMid = {\n            x: (pStart.x + pEnd.x) / 2,\n            y: (pStart.y + pEnd.y) / 2\n        };\n\n        const error = Math.sqrt((pMid.x - linearMid.x) ** 2 + (pMid.y - linearMid.y) ** 2);\n\n        if (error > threshold) {\n            this.subdivideAdaptive(controlPoints, tStart, midT, curve, threshold); // recursively subdivide\n            this.subdivideAdaptive(controlPoints, midT, tEnd, curve, threshold); // recursively subdivide\n        } else {\n            curve.push(pStart);\n            curve.push(pEnd);\n        }\n    }\n\n    deCasteljau(points, t) {\n        if (points.length === 1) return points[0];\n        let newPoints = [];\n        for (let i = 0; i < points.length - 1; i++) {\n            let x = (1 - t) * points[i].x + t * points[i + 1].x;\n            let y = (1 - t) * points[i].y + t * points[i + 1].y;\n            newPoints.push({ x, y });\n        }\n        return this.deCasteljau(newPoints, t); // recursively apply de Casteljau's algorithm\n    }\n\n    addControlPoint(x, y) {\n        this.controlPoints.push({ x, y });\n        this.bezierCurvePoints = this.calculateBezier(); // recalculate bezier curve points\n    }\n\n    updateControlPoint(index, x, y) {\n        if (index >= 0 && index < this.controlPoints.length) {\n            this.controlPoints[index] = { x, y };\n            this.bezierCurvePoints = this.calculateBezier(); // recalculate bezier curve points\n        }\n    }\n\n    setColor(color) {\n        this.color = color;\n    }\n\n    setHeading(robotHeading) {\n        this.robotHeading = robotHeading;\n    }\n}\n\nexport default Path;\n","import { writable, derived } from 'svelte/store';\nimport Path from './utils/Path.js';\n\n// function to create a persistent store\nconst persistStore = (key, initialValue) => {\n  const revivePaths = (value) => value.map(p => Path.revive(p));\n  \n  const storedValue = localStorage.getItem(key);\n  let parsedValue;\n  \n  try {\n    parsedValue = storedValue \n    ? key === 'paths'\n      ? revivePaths(JSON.parse(storedValue))\n      : JSON.parse(storedValue)\n    : initialValue;\n  } catch {\n    parsedValue = initialValue;\n  }\n  \n  const store = writable(parsedValue);\n  store.subscribe(value => {\n    localStorage.setItem(key, JSON.stringify(value));\n  });\n  return store;\n  };\n\n// creating persistent stores for various settings\nexport const paths = persistStore('paths', []);\nexport const robotLength = persistStore('robotLength', 18);\nexport const robotWidth = persistStore('robotWidth', 18);\nexport const robotUnits = persistStore('robotUnits', 'inches');\nexport const rotationUnits = persistStore('rotationUnits', 'degrees');\nexport const shouldShowHitbox = persistStore('shouldShowHitbox', false);\nexport const shouldHaveBoilerplate = persistStore('shouldHaveBoilerplate', false);\nexport const autoLinkPaths = persistStore('autoLinkPaths', true);\nexport const shouldRepeatPath = persistStore('shouldRepeatPath', true);\n\n// derived store to calculate display dimensions\nexport const displayDimensions = derived(\n  [robotLength, robotWidth, robotUnits],\n  ([$length, $width, $units]) => ({\n  displayLength: parseFloat(($units === 'inches' ? $length : $length * 2.54).toFixed(2)),\n  displayWidth: parseFloat(($units === 'inches' ? $width : $width * 2.54).toFixed(2))\n  })\n);\n","const bezierCache = new Map();\n\nfunction getCachedBezier(t, controlPoints) {\n    const key = JSON.stringify({ t, controlPoints });\n    if (!bezierCache.has(key)) {\n        bezierCache.set(key, getPointAt(t, controlPoints));\n    }\n    return bezierCache.get(key);\n}\n\nexport function factorial(n) {\n    return n <= 1 ? 1 : n * factorial(n - 1);\n}\n\nexport function getPointAt(t, controlPoints) {\n    if (controlPoints.length === 2) {\n        // linear interpolation for 2 points\n        return {\n            x: (1 - t) * controlPoints[0].x + t * controlPoints[1].x,\n            y: (1 - t) * controlPoints[0].y + t * controlPoints[1].y\n        };\n    }\n\n    if (controlPoints.length === 1) {\n        // single point, return as is\n        return controlPoints[0];\n    }\n\n    let newPoints = [];\n    for (let i = 0; i < controlPoints.length - 1; i++) {\n        let x = (1 - t) * controlPoints[i].x + t * controlPoints[i + 1].x;\n        let y = (1 - t) * controlPoints[i].y + t * controlPoints[i + 1].y;\n        newPoints.push({ x, y });\n    }\n\n    // recursive call for more than 2 points\n    return getPointAt(t, newPoints);\n}\n\nexport function getDerivativeAt(t, controlPoints) {\n    if (controlPoints.length < 2) return { x: 0, y: 0 };\n\n    let derivatives = [];\n    for (let i = 0; i < controlPoints.length - 1; i++) {\n        let x = controlPoints.length * (controlPoints[i + 1].x - controlPoints[i].x);\n        let y = controlPoints.length * (controlPoints[i + 1].y - controlPoints[i].y);\n        derivatives.push({ x, y });\n    }\n\n    return getCachedBezier(t, derivatives);\n}\n\nexport function getNormalAt(t, controlPoints) {\n    const tangent = getDerivativeAt(t, controlPoints);\n    const length = Math.sqrt(tangent.x ** 2 + tangent.y ** 2);\n    if (length === 0) return { x: 0, y: 0 }; \n    return { x: -tangent.y / length, y: tangent.x / length }; \n}\n\nexport function getOffsetPointAt(t, controlPoints, width) {\n    const point = getCachedBezier(t, controlPoints);\n    const normal = getNormalAt(t, controlPoints);\n\n    return {\n        left: { x: point.x + normal.x * (width / 2), y: point.y + normal.y * (width / 2) },\n        right: { x: point.x - normal.x * (width / 2), y: point.y - normal.y * (width / 2) }\n    };\n}\n\nexport function generateHitboxPath(controlPoints, width) {\n    if (controlPoints.length < 2) {\n        console.warn(`WARN skipping hitbox: not enough control points (${controlPoints.length} found)`);\n        return { leftPath: [], rightPath: [] };\n    }\n\n    const leftPath = [];\n    const rightPath = [];\n\n    // case 1: linear path (2 points)\n    if (controlPoints.length === 2) {\n        console.log(\"generating LINEAR hitbox for 2pt path\");\n        for (let t = 0; t <= 1; t += 0.01) {\n            const x = (1 - t) * controlPoints[0].x + t * controlPoints[1].x;\n            const y = (1 - t) * controlPoints[0].y + t * controlPoints[1].y;\n            const normal = getNormalAt(t, controlPoints);\n\n            leftPath.push({ x: x + normal.x * (width / 2), y: y + normal.y * (width / 2) });\n            rightPath.push({ x: x - normal.x * (width / 2), y: y - normal.y * (width / 2) });\n        }\n    }\n    // case 2: bézier curve (3+ points)\n    else {\n        console.log(\"generating Bézier hitbox\");\n        for (let t = 0; t <= 1; t += 0.01) {\n            const offsetPoints = getOffsetPointAt(t, controlPoints, width);\n            leftPath.push(offsetPoints.left);\n            rightPath.push(offsetPoints.right);\n        }\n    }\n\n    console.log(\"generated hitbox:\", { leftPath, rightPath });\n    return { leftPath, rightPath };\n}\n","<script>\n\timport { onMount } from 'svelte';\n\timport {\n\tpaths,\n\trobotLength,\n\trobotWidth,\n\trobotUnits,\n\trotationUnits,\n\tshouldShowHitbox,\n\tshouldHaveBoilerplate,\n\tautoLinkPaths,\n\tshouldRepeatPath,\n\tdisplayDimensions\n\t} from './stores.js';\n\timport PathClass from './utils/Path.js';\n\timport { generateHitboxPath, getPointAt } from './utils/bezier.js';  \n\n\tlet scrubValue = 0;\n\tlet robotX = 12;\n\tlet robotY = 96;\n\n\tlet isPlaying = false;\n\tlet wasPaused = true;\n\tlet isStartingFromBeginning = true;\n\t$: animTime = 1.56 * $paths.length;\n\tlet intervalId = null;\n\tlet animInterval = 1;\n\tlet progress = 0;\n\tlet elapsedTime = 0;\n\tlet path = null;\n\tlet pathAnimTime = 0;\n\tlet linearScrubValue = 0;\n\tlet motionBlurAmount = 0.02; \n\tlet currentPathIndex = 0;\n\tlet pathStartTime = 0;\n\tlet robotLiveAngle = 0;\n\t\n\t$: ({ displayLength, displayWidth } = $displayDimensions);\n\n\t\n\t/**\n\t * updates the robot length based on the provided value\n\t *\n\t * @param {number|string} value - the new length value to be set, can be a number or a string that can be parsed to a number.\n\t */\n\tfunction updateRobotLength(value) {\n\t\tconst newValue = parseFloat(value) || 0;\n\t\t$robotLength = parseFloat(($robotUnits === 'inches' ? newValue : newValue / 2.54).toFixed(2));\n\t}\n\t\n\t\n\t/**\n\t * updates the robot width based on the provided value\n\t * \n\t * @param {number|string} value - the new width value to be set, can be a number or a string that can be parsed to a number.\n\t */\n\tfunction updateRobotWidth(value) {\n\t\tconst newValue = parseFloat(value) || 0;\n\t\t$robotWidth = parseFloat(($robotUnits === 'inches' ? newValue : newValue / 2.54).toFixed(2));\n\t}\n\n\n\t$: {\n\t\t// convert angles based on selected units\n\t\tconst angleConversionFactor = $rotationUnits === 'degrees' ? (Math.PI / 180) : 1;\n\t\t$paths.forEach(path => {\n\t\t\tif (path.robotHeading === 'linear') {\n\t\t\t\tpath.startAngle = (path.startAngleDegrees || 0) * angleConversionFactor;\n\t\t\t\tpath.endAngle = (path.endAngleDegrees || 0) * angleConversionFactor;\n\t\t\t} else if (path.robotHeading === 'constant') {\n\t\t\t\tpath.constantAngle = (path.constantAngleDegrees || 0) * angleConversionFactor;\n\t\t\t}\n\t\t});\n\t}\n\t/**\n\t * generates the Bezier curve for the specified path.\n\t *\n\t * @param {number} pathId - the ID of the path for which to generate the Bezier curve.\n\t */\n\tfunction generateBezierCurve(pathId) {\n\t\tpaths.update(paths => {\n\t\t\tconst path = paths.find(p => p.id === pathId);\n\t\t\tif (path) {\n\t\t\t\tpath.bezierCurvePoints = calculateBezier(path.controlPoints, 100);\n\t\t\t}\n\t\t\treturn paths;\n\t\t});\n\t}\n\n\t/**\n\t * calculates a Bezier curve using the de Casteljau's algorithm.\n\t *\n\t * @param {Array} points - an array of control points for the Bezier curve.\n\t * @param {number} steps - the number of steps to divide the curve into.\n\t * @returns {Array} - an array of points representing the calculated Bezier curve.\n\t */\n\tfunction calculateBezier(points, steps) {\n\t\tlet curve = [];\n\t\tfor (let t = 0; t <= 1; t += 1 / steps) {\n\t\t\tcurve.push(deCasteljau(points, t));\n\t\t}\n\t\tcurve.push(points[points.length - 1]);\n\t\treturn curve;\n\t}\n\n\t/**\n\t * computes a point on a Bezier curve using De Casteljau's algorithm.\n\t *\n\t * @param {Array<{x: number, y: number}>} points - an array of points defining the Bezier curve.\n\t * @param {number} t - the parameter t, where 0 <= t <= 1, representing the position on the curve.\n\t * @returns {{x: number, y: number}} - the computed point on the Bezier curve at parameter t.\n\t */\n\n\tfunction deCasteljau(points, t) {\n\t\tif (points.length === 1) return points[0];\n\t\tlet newPoints = [];\n\t\tfor (let i = 0; i < points.length - 1; i++) {\n\t\t\tlet x = (1 - t) * points[i].x + t * points[i + 1].x;\n\t\t\tlet y = (1 - t) * points[i].y + t * points[i + 1].y;\n\t\t\tnewPoints.push({ x, y });\n\t\t}\n\t\treturn deCasteljau(newPoints, t);\n\t}\n\n\t// exports the control points and related settings to a JSON file\n\tfunction exportControlPoints() {\n\t\tconst data = {\n\t\t\tpaths: $paths,\n\t\t\trobotLength: $robotLength,\n\t\t\trobotWidth: $robotWidth,\n\t\t\trobotUnits: $robotUnits,\n\t\t\trotationUnits: $rotationUnits,\n\t\t\tshouldShowHitbox: $shouldShowHitbox,\n\t\t\tshouldHaveBoilerplate: $shouldHaveBoilerplate,\n\t\t\tautoLinkPaths: $autoLinkPaths,\n\t\t\tshouldRepeatPath: $shouldRepeatPath\n\t\t};\n\t\t\n\t\tconst json = JSON.stringify(data, null, 2);\n\t\tconst blob = new Blob([json], { type: 'application/json' });\n\t\tconst url = URL.createObjectURL(blob);\n\t\tconst link = document.createElement('a');\n\t\tlink.href = url;\n\t\tlink.download = 'paths.json';\n\t\tlink.click();\n\t}\n\n\t// resets all settings to their default values\n\tfunction resetToDefault() {\n\t\tpaths.set([]);\n\t\taddPath();\n\t\tgenerateBezierCurve($paths.length - 1);\n\t\tupdateRobotPosition();\n\t\trobotLength.set(18);\n\t\trobotWidth.set(18);\n\t\trobotUnits.set('inches');\n\t\trotationUnits.set('degrees');\n\t\tshouldShowHitbox.set(false);\n\t\tshouldHaveBoilerplate.set(false);\n\t\tautoLinkPaths.set(true);\n\t\tshouldRepeatPath.set(true);\n\t}\n\n\t// imports control points and related settings from a JSON file\n\tfunction importControlPoints() {\n\t\tconst input = document.createElement('input');\n\t\tinput.type = 'file';\n\t\tinput.accept = '.json';\n\t\tinput.onchange = async (event) => {\n\t\t\tconst file = event.target.files[0];\n\t\t\tconst text = await file.text();\n\t\t\tconst data = JSON.parse(text);\n\t\t\t\n\t\t\tpaths.set(data.paths);\n\t\t\trobotLength.set(data.robotLength);\n\t\t\trobotWidth.set(data.robotWidth);\n\t\t\trobotUnits.set(data.robotUnits);\n\t\t\trotationUnits.set(data.rotationUnits);\n\t\t\tshouldShowHitbox.set(data.shouldShowHitbox);\n\t\t\tshouldHaveBoilerplate.set(data.shouldHaveBoilerplate);\n\t\t\tautoLinkPaths.set(data.autoLinkPaths);\n\t\t\tshouldRepeatPath.set(data.shouldRepeatPath);\n\t\t\t\n\t\t\tdata.paths.forEach((_, index) => generateBezierCurve(index));\n\t\t\tupdateRobotPosition();\n\t\t};\n\t\tinput.click();\n\t}\n\n\t// adds a new path to the list of paths\n\tfunction addPath() {\n\tpaths.update(paths => {\n\t\tconst newPath = new PathClass(paths.length);\n\t\tif (paths.length > 0) {\n\t\t\tconst lastPath = paths[paths.length - 1];\n\t\t\tif (lastPath.controlPoints.length > 0) {\n\t\t\t\tconst lastControlPoint = lastPath.controlPoints[lastPath.controlPoints.length - 1];\n\t\t\t\tconst angle = Math.random() * 2 * Math.PI;\n\t\t\t\tconst distance = 50;\n\t\t\t\tconst x = 72 + Math.cos(angle) * distance;\n\t\t\t\tconst y = 72 + Math.sin(angle) * distance;\n\t\t\t\tnewPath.controlPoints.push({ x: lastControlPoint.x, y: lastControlPoint.y });\n\t\t\t\tnewPath.controlPoints.push({ x, y });\n\t\t\t}\n\t\t} else {\n\t\t\tnewPath.controlPoints.push({ x: 12, y: 96 });\n\t\t\tnewPath.controlPoints.push({ x: 36, y: 96 });\n\t\t}\n\t\tnewPath.bezierCurvePoints = newPath.calculateBezier();\n\t\treturn [...paths, newPath];\n\t\t});\n\t}\n\n\t// if there's no paths on mount, add a new path\n\tonMount(() => {\n\t\tpaths.update(p => {\n\t\t\tif (p.length === 0) {\n\t\t\t\taddPath();\n\t\t\t}\n\t\t\treturn p;\n\t\t});\n\t});\n\n\t/**\n\t * adds a control point to the specified path at the given index.\n\t *\n\t * @param {number} pathId - the ID of the path to which the control point will be added.\n\t * @param {number} index - the index at which the control point will be added (but idk why this is still here, we don't use it)\n\t */\n\tfunction addControlPointToPathWithIndex(pathId, index) {\n\t\tpaths.update(paths => {\n\t\t\tconst path = paths.find(p => p.id === pathId);\n\t\t\tif (path) {\n\t\t\t\tconst angle = Math.random() * 2 * Math.PI;\n\t\t\t\tconst distance = 50;\n\t\t\t\t// generate a random point in a circle from the center of the field\n\t\t\t\tconst x = 72 + Math.cos(angle) * distance;\n\t\t\t\tconst y = 72 + Math.sin(angle) * distance;\n\n\t\t\t\tif (path.controlPoints.length > 1) {\n\t\t\t\t\tconst insertIndex = path.controlPoints.length - 1;  \n\t\t\t\t\tpath.controlPoints.splice(insertIndex, 0, { x, y }); \n\t\t\t\t} else {\n\t\t\t\t\tpath.controlPoints.push({ x, y }); \n\t\t\t\t}\n\t\t\t}\n\t\t\treturn paths;\n\t\t});\n\t}\n\n\t\n\t/**\n\t * updates the color of a specific path identified by its ID.\n\t *\n\t * @param {string} pathId - the unique identifier of the path to update.\n\t * @param {string} color - the new color to set for the specified path.\n\t */\n\tfunction updatePathColor(pathId, color) {\n\t\tpaths.update(paths => {\n\t\t\tconst path = paths.find(p => p.id === pathId);\n\t\t\tif (path) {\n\t\t\t\tpath.setColor(color);\n\t\t\t}\n\t\t\treturn paths;\n\t\t});\n\t}\n\n\n\t/**\n\t * deletes a path by its ID and updates the paths store.\n\t * \n\t * @param {number} pathId - the ID of the path to delete.\n\t */\n\n\tfunction deletePath(pathId) {\n\t\tpaths.update(paths => {\n\t\t\tconst updatedPaths = paths.filter(path => path.id !== pathId);\n\t\t\tupdatedPaths.forEach((path, index) => {\n\t\t\t\tpath.id = index;\n\t\t\t});\n\n\t\t\t// check if auto-link paths is enabled and the path to be deleted is not the first or last path\n\t\t\tif ($autoLinkPaths && pathId > 0 && pathId < paths.length - 1) {\n\t\t\t\tconst previousPath = updatedPaths[pathId - 1];\n\t\t\t\tconst nextPath = updatedPaths[pathId];\n\t\t\t\tif (previousPath && nextPath) {\n\t\t\t\t\tnextPath.controlPoints[0] = { ...previousPath.controlPoints[previousPath.controlPoints.length - 1] };\n\t\t\t\t\tnextPath.bezierCurvePoints = calculateBezier(nextPath.controlPoints, 100);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn updatedPaths;\n\t\t});\n\t}\n\n\t// plays the path animation\n\tfunction playPath() {\n\t\tif (isPlaying) return;\n\t\tisPlaying = true;\n\n\t\tcurrentPathIndex = isStartingFromBeginning ? 0 : Math.floor(scrubValue / 100 * $paths.length);\n\t\tpathStartTime = Date.now() - (isStartingFromBeginning ? 0 : (scrubValue % (100 / $paths.length)) / 100 * animTime * 1000);\n\n\t\t// if the path was paused, we need to adjust the start time to account for the time the path was paused\n\t\tif (wasPaused) {\n\t\t\tpathStartTime = Date.now() - (progress * pathAnimTime * 1000);\n\t\t}\n\n\t\t// set an interval to update the animation frame\n\t\tintervalId = setInterval(() => {\n\t\t\telapsedTime = (Date.now() - pathStartTime) / 1000;\n\t\t\tpath = $paths[currentPathIndex];\n\t\t\tpathAnimTime = animTime / $paths.length;\n\t\t\tprogress = elapsedTime / pathAnimTime;\n\n\t\t\t// update the linear scrub value based on the current progress\n\t\t\tlinearScrubValue = ((currentPathIndex + progress) / $paths.length) * 100;\n\n\t\t\t// add easing to the progress\n\t\t\tif (progress < 0.5) {\n\t\t\t\tprogress = 2 * progress * progress;\n\t\t\t} else {\n\t\t\t\tprogress = -1 + (4 - 2 * progress) * progress;\n\t\t\t}\n\n\t\t\tscrubValue = ((currentPathIndex + progress) / $paths.length) * 100;\n\t\t\tupdateRobotPosition();\n\n\t\t\t// check if the current path animation is complete\n\t\t\tif (elapsedTime >= pathAnimTime) {\n\t\t\t\tif (currentPathIndex + 1 >= $paths.length) {\n\t\t\t\t\tif ($shouldRepeatPath) {\n\t\t\t\t\t\tcurrentPathIndex = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpausePath();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// move to the next path\n\t\t\t\t\tcurrentPathIndex++;\n\t\t\t\t}\n\t\t\t\tpathStartTime = Date.now();\n\t\t\t}\n\t\t}, animInterval);\n\t}\n\tfunction updateRobotPosition() {\n\t\tlet totalPoints = 0;\n\t\t$paths.forEach(path => {\n\t\t\ttotalPoints += path.bezierCurvePoints.length; // calculate total points\n\t\t});\n\n\t\tlet accumulatedPoints = 0;\n\t\tfor (let path of $paths) {\n\t\t\tif (scrubValue <= (accumulatedPoints + path.bezierCurvePoints.length) / totalPoints * 100) {\n\t\t\t\tconst relativeScrubValue = (scrubValue - accumulatedPoints / totalPoints * 100) / (path.bezierCurvePoints.length / totalPoints * 100);\n\t\t\t\tconst pointIndex = Math.floor(relativeScrubValue * (path.bezierCurvePoints.length - 1)); // find the point index\n\t\t\t\tconst point = path.bezierCurvePoints[pointIndex];\n\t\t\t\tif (point) {\n\t\t\t\t\trobotX = point.x;\n\t\t\t\t\trobotY = point.y;\n\n\t\t\t\t\tconst robotElement = document.getElementById('robot');\n\t\t\t\t\tif (robotElement) {\n\t\t\t\t\t\tif (path.robotHeading === 'tangential') {\n\t\t\t\t\t\t\tconst nextPoint = path.bezierCurvePoints[Math.min(pointIndex + 1, path.bezierCurvePoints.length - 1)];\n\t\t\t\t\t\t\tconst prevPoint = path.bezierCurvePoints[Math.max(pointIndex - 1, 0)];\n\t\t\t\t\t\t\tlet angle = Math.atan2(nextPoint.y - prevPoint.y, nextPoint.x - prevPoint.x); // calculate tangential angle\n\t\t\t\t\t\t\tif (path.reverse) {\n\t\t\t\t\t\t\t\tangle += Math.PI;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trobotElement.style.transform = `translate(-50%, 50%) rotate(${-angle + Math.PI / 2}rad)`;\n\t\t\t\t\t\t\trobotLiveAngle = $rotationUnits === 'degrees' ? angle * (180 / Math.PI) : angle;\n\t\t\t\t\t\t} else if (path.robotHeading === 'linear') {\n\t\t\t\t\t\t\tconst startAngle = path.startAngle || 0;\n\t\t\t\t\t\t\tconst endAngle = path.endAngle || 0;\n\t\t\t\t\t\t\tconst angle = startAngle + (endAngle - startAngle) * relativeScrubValue; // interpolate linear angle\n\t\t\t\t\t\t\trobotElement.style.transform = `translate(-50%, 50%) rotate(${-angle + Math.PI / 2}rad)`;\n\t\t\t\t\t\t\trobotLiveAngle = $rotationUnits === 'degrees' ? angle * (180 / Math.PI) : angle;\n\t\t\t\t\t\t} else if (path.robotHeading === 'constant') {\n\t\t\t\t\t\t\tconst angle = path.constantAngle || 0;\n\t\t\t\t\t\t\trobotElement.style.transform = `translate(-50%, 50%) rotate(${-angle + Math.PI / 2}rad)`; // set constant angle\n\t\t\t\t\t\t\trobotLiveAngle = $rotationUnits === 'degrees' ? -angle * (180 / Math.PI) : -angle;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\taccumulatedPoints += path.bezierCurvePoints.length; // accumulate points\n\t\t}\n\t}\n\n\t// pauses the path animation by stopping the interval and updating state variables\n\tfunction pausePath() {\n\t\tisPlaying = false;\n\t\tif (intervalId) {\n\t\t\tclearInterval(intervalId);\n\t\t\tintervalId = null;\n\t\t}\n\t\twasPaused = true;\n\t\tisStartingFromBeginning = false;\n\t}\n\n\t$: {\n\t\tif (!isPlaying && wasPaused) {\n\t\t\tconst totalPaths = $paths.length;\n\t\t\tconst pathIndex = Math.floor(linearScrubValue / 100 * totalPaths);\n\t\t\tconst pathProgress = (linearScrubValue / 100 * totalPaths) - pathIndex;\n\t\t\tconst adjustedProgress = pathProgress < 0.5 ? 2 * pathProgress * pathProgress : -1 + (4 - 2 * pathProgress) * pathProgress;\n\t\t\tscrubValue = ((pathIndex + adjustedProgress) / totalPaths) * 100;\n\t\t\tcurrentPathIndex = pathIndex;\n\t\t\tprogress = adjustedProgress;\n\n\t\t\tupdateRobotPosition();\n\t\t}\n\t}\n\n\t$: {\n\t\tconst robotElement = document.getElementById('robot');\n\t\tif (robotElement) {\n\t\t\trobotElement.style.transition = isPlaying ? `transform ${animInterval}ms linear` : 'none';\n\t\t\trobotElement.style.filter = isPlaying ? `blur(${motionBlurAmount * 10}px)` : 'none';\n\t\t}\n\t}\n\n\n\t// add path on DOM content load\n\tdocument.addEventListener('DOMContentLoaded', () => {\n\t\tif ($paths.length === 0) {\n\t\t\taddPath();\n\t\t\tgenerateBezierCurve($paths.length - 1);\n\t\t}\n\t});\n\n\t// on mouse down event listener to move control points\n\tdocument.addEventListener('mousedown', (event) => {\n\t\tconst field = document.querySelector('.field');\n\t\tconst rect = field.getBoundingClientRect();\n\t\tconst mouseX = event.clientX - rect.left;\n\t\tconst mouseY = event.clientY - rect.top;\n\n\t\tlet selectedPathId = null;\n\t\tlet selectedPointIndex = null;\n\t\tlet selectedPathId2 = null;\n\t\tlet selectedPointIndex2 = null;\n\n\t\t// update selected control points based on mouse position\n\t\t$paths.forEach((path) => {\n\t\t\tpath.controlPoints.forEach((point, index) => {\n\t\t\t\tconst pointX = point.x / 144 * rect.width;\n\t\t\t\tconst pointY = rect.height - (point.y / 144 * rect.height);\n\t\t\t\tconst distance = Math.sqrt((mouseX - pointX) ** 2 + (mouseY - pointY) ** 2);\n\t\t\t\tif (distance < 10) {\n\t\t\t\t\tif (selectedPathId === null && selectedPointIndex === null) {\n\t\t\t\t\t\tselectedPathId = path.id;\n\t\t\t\t\t\tselectedPointIndex = index;\n\t\t\t\t\t} else if ($autoLinkPaths && selectedPathId2 === null && selectedPointIndex2 === null) {\n\t\t\t\t\t\tselectedPathId2 = path.id;\n\t\t\t\t\t\tselectedPointIndex2 = index;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tif (selectedPathId !== null && selectedPointIndex !== null) {\n\t\t\tconst movePoint = (moveEvent) => {\n\t\t\t\t// clamp the control points to the field boundaries\n\t\t\t\tconst newMouseX = moveEvent.clientX - rect.left;\n\t\t\t\tconst newMouseY = moveEvent.clientY - rect.top;\n\t\t\t\tlet newX = newMouseX / rect.width * 144;\n\t\t\t\tlet newY = 144 - (newMouseY / rect.height * 144);\n\n\t\t\t\t// apply hitbox offset to ensure the robot stays within the field\n\t\t\t\tconst hitboxOffsetX = $robotWidth / 2;\n\t\t\t\tconst hitboxOffsetY = $robotLength / 2;\n\t\t\t\tnewX = Math.max(hitboxOffsetX, Math.min(144 - hitboxOffsetX, newX));\n\t\t\t\tnewY = Math.max(hitboxOffsetY, Math.min(144 - hitboxOffsetY, newY));\n\n\t\t\t\tpaths.update(paths => {\n\t\t\t\t\tconst path = paths.find(p => p.id === selectedPathId);\n\t\t\t\t\tif (path) {\n\t\t\t\t\t\tpath.controlPoints[selectedPointIndex] = { x: newX, y: newY };\n\t\t\t\t\t\tpath.bezierCurvePoints = calculateBezier(path.controlPoints, 100);\n\t\t\t\t\t}\n\t\t\t\t\tif ($autoLinkPaths && selectedPathId2 !== null && selectedPointIndex2 !== null) {\n\t\t\t\t\t\tconst path2 = paths.find(p => p.id === selectedPathId2);\n\t\t\t\t\t\tif (path2) {\n\t\t\t\t\t\t\tpath2.controlPoints[selectedPointIndex2] = { x: newX, y: newY };\n\t\t\t\t\t\t\tpath2.bezierCurvePoints = calculateBezier(path2.controlPoints, 100);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn paths;\n\t\t\t\t});\n\n\t\t\t\tupdateRobotPosition();\n\t\t\t};\n\n\t\t\tconst stopMove = () => {\n\t\t\t\t// remove event listeners when the mouse button is released\n\t\t\t\tdocument.removeEventListener('mousemove', movePoint);\n\t\t\t\tdocument.removeEventListener('mouseup', stopMove);\n\t\t\t};\n\n\t\t\t// add event listeners for mouse move and mouse up\n\t\t\tdocument.addEventListener('mousemove', movePoint);\n\t\t\tdocument.addEventListener('mouseup', stopMove);\n\t\t}\n\t});\n\n\tfunction checkAutoLinkControlPoints() {\n\t\tif ($autoLinkPaths) {\n\t\t\tpaths.update(paths => {\n\t\t\t\t// iterate through each path except the last one\n\t\t\t\tfor (let i = 0; i < paths.length - 1; i++) {\n\t\t\t\t\tconst currentPath = paths[i];\n\t\t\t\t\tconst nextPath = paths[i + 1];\n\t\t\t\t\t// check if both current and next paths have control points\n\t\t\t\t\tif (currentPath.controlPoints.length > 0 && nextPath.controlPoints.length > 0) {\n\t\t\t\t\t\tconst lastPoint = currentPath.controlPoints[currentPath.controlPoints.length - 1];\n\t\t\t\t\t\t// set the first control point of the next path to the last control point of the current path\n\t\t\t\t\t\tnextPath.controlPoints[0] = { ...lastPoint };\n\t\t\t\t\t\tnextPath.bezierCurvePoints = calculateBezier(nextPath.controlPoints, 100);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn paths;\n\t\t\t});\n\t\t}\n\t}\n\n\t$: {\n\t\tcheckAutoLinkControlPoints();\n\t\tupdateRobotPosition();\n\t\tgenerateBezierCurve(1);\n\t}\n\n\n\tfunction showCodeWindow() {\n\t\tconst codeWindow = window.open('', 'CodeWindow', 'width=600,height=400');\n\n\t\tlet codeContent = '';\n\n\t\t// add boilerplate code if the option is selected\n\t\tif ($shouldHaveBoilerplate) {\n\n\t\t\tcodeContent += 'package your.package.here;\\n\\n';\n\t\t\tcodeContent += 'import com.pedropathing.follower.Follower;\\n';\n\t\t\tcodeContent += 'import com.pedropathing.localization.Pose;\\n';\n\t\t\tcodeContent += 'import com.pedropathing.pathgen.BezierCurve;\\n';\n\t\t\tcodeContent += 'import com.pedropathing.pathgen.BezierLine;\\n';\n\t\t\tcodeContent += 'import com.pedropathing.pathgen.Path;\\n';\n\t\t\tcodeContent += 'import com.pedropathing.pathgen.Point;\\n';\n\t\t\tcodeContent += 'import com.pedropathing.util.Constants;\\n';\n\t\t\tcodeContent += 'import com.pedropathing.util.Timer;\\n';\n\t\t\tcodeContent += 'import com.qualcomm.robotcore.eventloop.opmode.Autonomous;\\n';\n\t\t\tcodeContent += 'import com.qualcomm.robotcore.eventloop.opmode.OpMode;\\n';\n\t\t\tcodeContent += 'import pedroPathing.constants.FConstants;\\n';\n\t\t\tcodeContent += 'import pedroPathing.constants.LConstants;\\n\\n';\n\t\t\tcodeContent += '@Autonomous(name = \"New Auto\", group = \"Examples\")\\n';\n\t\t\tcodeContent += 'public class NewAuto extends OpMode {\\n\\n';\n\t\t\tcodeContent += '    private Follower follower;\\n';\n\t\t\tcodeContent += '    private Timer pathTimer, actionTimer, opmodeTimer;\\n';\n\t\t\tcodeContent += '    private int pathState;\\n\\n';\n\n\n\t\t}\n\n\t\tcodeContent += 'private final Pose startPose = new Pose(';\n\t\tcodeContent += robotX.toFixed(3) + ', ';\n\t\tcodeContent += robotY.toFixed(3) + ', ';\n\t\tcodeContent += $rotationUnits === 'degrees' ? `Math.toRadians(${robotLiveAngle.toFixed(3)})` : robotLiveAngle.toFixed(3);\n\t\tcodeContent += ');\\n\\n';\n\n\t\tcodeContent += 'private Path ';\n\n\t\t$paths.forEach((path, index) => {\n\t\t\tcodeContent += `p${index + 1}`;\n\t\t\tif (index < $paths.length - 1) {\n\t\t\t\tcodeContent += ', ';\n\t\t\t}\n\t\t});\n\t\tcodeContent += ';\\n\\n';\n\n\t\tcodeContent += 'public void buildPaths() {\\n';\n\n\t\t$paths.forEach((path, index) => {\n\t\t\tconst points = path.controlPoints.map(point => `new Point(${point.x.toFixed(3)}, ${point.y.toFixed(3)}, Point.CARTESIAN)`).join(',\\n                ');\n\t\t\tconst bezierType = path.controlPoints.length === 2 ? 'BezierLine' : 'BezierCurve';\n\t\t\tcodeContent += `    p${index + 1} = new Path(new ${bezierType}(\\n                ${points}\\n        )\\n    );\\n\\n`;\n\n\t\t\t// change code based on heading option selected\n\t\t\tif (path.robotHeading === 'constant') {\n\t\t\t\tconst angle = $rotationUnits === 'degrees' ? `Math.toRadians(${path.constantAngleDegrees || 0})` : `${path.constantAngleDegrees || 0}`;\n\t\t\t\tcodeContent += `    p${index + 1}.setConstantHeadingInterpolation(${angle});\\n\\n`;\n\t\t\t} else if (path.robotHeading === 'tangential') {\n\t\t\t\tcodeContent += `    p${index + 1}.setTangentHeadingInterpolation();\\n`;\n\t\t\t\tif (path.reverse) {\n\t\t\t\t\tcodeContent += `    p${index + 1}.setReversed(true);\\n\\n`;\n\t\t\t\t} else {\n\t\t\t\t\tcodeContent += `    p${index + 1}.setReversed(false);\\n\\n`;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (path.robotHeading === 'linear') {\n\t\t\t\tconst startAngle = $rotationUnits === 'degrees' ? `Math.toRadians(${path.startAngleDegrees || 0})` : `${path.startAngleDegrees || 0}`;\n\t\t\t\tconst endAngle = $rotationUnits === 'degrees' ? `Math.toRadians(${path.endAngleDegrees || 0})` : `${path.endAngleDegrees || 0}`;\n\t\t\t\tcodeContent += `    p${index + 1}.setLinearHeadingInterpolation(${startAngle}, ${endAngle});\\n\\n`;\n\t\t\t}\n\t\t});\n\n\t\tcodeContent += '}\\n\\n';\n\n\t\tif ($shouldHaveBoilerplate) {\n\n\t\tcodeContent += 'public void autonomousPathUpdate() {\\n';\n\t\tcodeContent += '    switch (pathState) {\\n';\n\n\t\t$paths.forEach((_, index) => {\n\t\t\tcodeContent += `        case ${index * 10}:\\n`;\n\t\t\tcodeContent += `            if (!follower.isBusy()) {\\n`;\n\t\t\tcodeContent += `                follower.followPath(p${index + 1});\\n`;\n\t\t\tcodeContent += `                setPathState(${(index + 1) * 10});\\n`;\n\t\t\tcodeContent += `            }\\n`;\n\t\t\tcodeContent += `            break;\\n`;\n\t\t});\n\n\t\tcodeContent += '    }\\n';\n\t\tcodeContent += '}\\n\\n';\n\n\t\tcodeContent += 'public void setPathState(int pState) {\\n';\n\t\tcodeContent += '    pathState = pState;\\n';\n\t\tcodeContent += '    pathTimer.resetTimer();\\n';\n\t\tcodeContent += '}\\n\\n';\n\n\t\tcodeContent += 'public void loop() {\\n';\n\t\tcodeContent += '    follower.update();\\n';\n\t\tcodeContent += '    autonomousPathUpdate();\\n';\n\t\tcodeContent += '    telemetry.addData(\"path state\", pathState);\\n';\n\t\tcodeContent += '    telemetry.addData(\"x\", follower.getPose().getX());\\n';\n\t\tcodeContent += '    telemetry.addData(\"y\", follower.getPose().getY());\\n';\n\t\tcodeContent += '    telemetry.addData(\"heading\", follower.getPose().getHeading());\\n';\n\t\tcodeContent += '    telemetry.update();\\n';\n\t\tcodeContent += '}\\n\\n';\n\n\t\tcodeContent += 'public void init() {\\n';\n\t\tcodeContent += '    pathTimer = new Timer();\\n';\n\t\tcodeContent += '    opmodeTimer = new Timer();\\n';\n\t\tcodeContent += '    opmodeTimer.resetTimer();\\n\\n';\n\t\tcodeContent += '    Constants.setConstants(FConstants.class, LConstants.class);\\n';\n\t\tcodeContent += '    follower = new Follower(hardwareMap);\\n';\n\t\tcodeContent += '    follower.setStartingPose(startPose);\\n';\n\t\tcodeContent += '    buildPaths();\\n';\n\t\tcodeContent += '}\\n\\n';\n\n\t\tcodeContent += 'public void init_loop() {}\\n\\n';\n\n\t\tcodeContent += 'public void start() {\\n';\n\t\tcodeContent += '    opmodeTimer.resetTimer();\\n';\n\t\tcodeContent += '    setPathState(0);\\n';\n\t\tcodeContent += '}\\n\\n';\n\n\t\tcodeContent += 'public void stop() {}\\n\\n';\n\n\t\tcodeContent += '}';\n\n\t\t}\n\n\n\t\tcodeWindow.document.write('<pre>' + codeContent + '</pre>');\n\t\tcodeWindow.document.close();\n\t}\n\n\tlet offsetPaths = [];\n\n\t$: {\n\t\t// initialize offsetPaths with empty arrays for left, right, and main paths\n\t\toffsetPaths = $paths.map(path => ({\n\t\t\tleft: [],\n\t\t\tright: [],\n\t\t\tmain: [],\n\t\t\tcolor: path.color,\n\t\t\tcontrolPoints: path.controlPoints,\n\t\t}));\n\n\t\t// iterate through each path to generate hitbox paths and main paths\n\t\t$paths.forEach((path, pathIndex) => {\n\t\t\tif (path.controlPoints.length >= 2) { \n\t\t\t\tlet mainPath = [];\n\t\t\t\t\n\t\t\t\tconst { leftPath, rightPath } = generateHitboxPath(path.controlPoints, $robotWidth);\n\n\t\t\t\t// generate main path points using getPointAt function\n\t\t\t\tfor (let t = 0; t <= 1; t += 0.01) {\n\t\t\t\t\tconst mainPoint = getPointAt(t, path.controlPoints);\n\t\t\t\t\tmainPath.push(mainPoint);\n\t\t\t\t}\n\n\t\t\t\t// update offsetPaths with generated paths\n\t\t\t\toffsetPaths[pathIndex].main = mainPath;\n\t\t\t\toffsetPaths[pathIndex].left = leftPath;\n\t\t\t\toffsetPaths[pathIndex].right = rightPath;\n\t\t\t}\n\t\t});\n\t}\n\n</script>\n  \n<style>\n\t* {\n\t\tfont-family: \"Nunito\", serif;\n\t\tfont-optical-sizing: auto;\n\t\tfont-weight: 600;\n\t\tfont-style: normal;\n\t}\n\n\th1 {\n\t\ttext-align: center;\n\t\tfont-size: 1rem;\n\t}\n\n\t.page-title {\n\t\tfont-size: 1.25rem;\n\t\tpadding: 0.3rem;\n\t\tmargin-left: 0.5rem;\n\t\n\t}\n\n\t.container {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\twidth: 100%;\n\t\tmin-width: 100%;\n\t\tmax-height: 85vh;\n\t}\n\n\t.container > * {\n\t\tmargin: 0.3rem;\n\t\tbox-shadow: 4px 4px 8px rgba(0, 0, 0, 0.3);\n\t\tborder-radius: 10px;\n\t\t\n\t}\n\n\t.field {\n\t\tposition: relative;\n\t\twidth: 80vh;\n\t\theight: 80vh;\n\t\tmax-width: 80vh;\n\t\tmax-height: 80vh;\n\t\tmin-width: 40vh;\n\t\tmin-height: 40vh;\n\t\tbackground: url('https://jwhof.github.io/jpather/assets/good-field-image.png') no-repeat center center; \n\t\tbackground-size: cover;\n\t\tborder: 1px solid #ccc;\n\t}\n\n\t.point {\n\t\tposition: absolute;\n\t\twidth: 2%;\n\t\theight: 2%;\n\t\tborder-radius: 50%;\n\t\ttransform: translate(-50%, 50%);\n\t\tz-index: 2;\n\t}\n\n\t.point:hover {\n\t\twidth: 3%;\n\t\theight: 3%;\n\t\tcursor: grab;\n\t}\n\n\t.robot-options-menu {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: left;\n\t\tpadding: 1rem;\n\t\tflex-grow: 1;\n\t\theight: 45vh;\n\t}\n\n\t.robot-options {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tflex-direction: row;\n\t\tborder:none;\n\t}\n\n\n\t.robot-options-menu > * {\n\t\tmargin: 0.5rem;\n\t}\n\n\t.section-title {\n\t\tfont-size: 1.25rem;\n\t\tfont-weight: bold;\n\t\tmargin-top: 0;\n\t}\n\n\t.paths {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: left;\n\t\talign-items: flex-start;\n\t\tpadding: 1rem;\n\t\tflex-grow: 1;\n\t\tmax-height: 80vh;\n\t\toverflow-y: auto;\n\t}\n\n\t.paths > * {\n\t\tmargin: 0.5rem;\n\t}\n\n\t.header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: 0.1rem;\n\t\tbackground: rgb(255, 255, 255);\n\t\theight: 2.5rem;\n\t}\n\n\tbutton {\n\t\tbackground: #B1F0F7;\n\t\tborder: none;\n\t\tpadding: 0.5rem 1rem;\n\t\tborder-radius: 5px;\n\t\tcursor: pointer;\n\t\tfont-size: 0.75rem;\n\t}\n\n\tbutton:hover {\n\t\tbackground: #8EDCE6 !important;\n\t}\n\n\t.path {\n\t\tmargin: 0rem;\n\t\tmargin-bottom: 0.3rem;\n\t\tborder-radius: 10px;\n\t\tborder: 4px solid;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\twidth: calc(100% - 8px);\n\t}\n\n\t.path-header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tflex-direction: row;\n\t\tborder:none;\n\t\theight: 2rem;\n\t\tmargin: 0.5rem;\n\t}\n\n\t.path-control-points {\n\t\tdisplay: block;\n\t\tmargin: 0.5rem;\n\t}\n\n\t\n\t.color-circle {\n\t\t-webkit-appearance: none;\n\t\t-moz-appearance: none;\n\t\tappearance: none;\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tborder: none;\n\t\tcursor: pointer;\n\t\tmargin: 0.75rem;\n\t\t\n\t}\n\n\t.color-circle::-webkit-color-swatch {\n\t\tborder-radius: 20px;\n\t\tborder: none;\n\t}\n\n\t.path-and-color {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t.add-and-remove {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t.add-and-remove > svg {\n\t\tcursor: pointer;\n\t\tmargin: 0.1rem;\n\t}\n\n\t.path-and-color > .path-title {\n\t\tfont-weight: bold;\n\t}\n\n\t.control-point-box > label {\n\t\tfont-size: 0.75rem;\n\t\tfont-weight: 750;\n\t}\n\n\t.control-point-mini-box {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tflex-direction: row;\n\t}\n\n\t.control-point-mini-box-x > input {\n\t\tfont-size: 0.75rem;\n\t\tfont-weight: 750;\n\t\tmargin:0rem;\n\t}\n\t\n\t\n\t.control-point-mini-box-y > input {\n\t\tfont-size: 0.75rem;\n\t\tfont-weight: 750;\n\t\tmargin:0rem;\n\t}\n\t\n\n\t.control-point-mini-box-x, .control-point-mini-box-y {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin: 0.1rem;\n\t\tflex-direction: row;\n\t}\n\t.control-point-mini-box-x > label {\n\t\tfont-size: 0.75rem;\n\t\tfont-weight: 750;\n\t}\n\t\n\t.control-point-mini-box-y > label {\n\t\tfont-size: 0.75rem;\n\t\tfont-weight: 750;\n\t}\n\n\t.control-point-mini-box-heading > label {\n\t\tfont-size: 0.75rem;\n\t\tfont-weight: 750;\n\t}\n\n\t.control-point-mini-box-heading {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin: 0.1rem;\n\t\tflex-direction: row;\n\t\tjustify-content: space-between;\n\t\twidth: 100%;\n\t}\n\n\t.control-point-mini-box-heading > input {\n\t\tfont-size: 0.75rem;\n\t\tfont-weight: 750;\n\t\tmargin:0rem;\n\t}\n\n\t.cp-x, .cp-y, .cp-heading {\n\t\tmargin: 0.3rem;\n\t\tfont-weight: 400 !important;\n\t}\n\n\t.robot-options > label {\n\t\tfont-size:0.75rem;\n\t\tmargin-top: 0rem;\n\t\tmargin-bottom: 0rem;\n\t}\n\n\t.robot-options > input {\n\t\tfont-size: 0.75rem;\n\t}\n\n\t.scrubbing-bar {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tbackground: white;\n\t\tpadding: 0.5rem;\n\t\tborder-radius: 5px;\n\n\t\tmargin: 0.3rem;\n\t\tbox-shadow: 4px 4px 8px rgba(0, 0, 0, 0.3);\n\t\tborder-radius: 10px;\n\t\t\n\t}\n\n\t.scrubbing-bar input[type=\"range\"] {\n\t\tmargin: 0.3rem;\t\t\n\t\t-webkit-appearance: none;\n\t\tappearance: none;\n\t\tpadding: 0rem;\n\t\tbackground: rgb(239, 238, 238);\n\t\tborder-radius: 12.5px;\n\t\toutline: none;\n\t\twidth: 100%;\n\t\tborder: transparent;\n\t\talign-items: center;\n\t}\n\n\t.scrubbing-bar input[type=\"range\"]::-webkit-slider-thumb {\n\t\t-webkit-appearance: none;\n\t\tappearance: none;\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tbackground: #B1F0F7;\n\t\tborder-radius: 50%;\n\t\tcursor: pointer;\n\t}\n\n\t.scrubbing-bar input[type=\"range\"]::-moz-range-thumb {\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tbackground: #B1F0F7;\n\t\tborder-radius: 50%;\n\t\tcursor: pointer;\n\t}\n\n\t.scrubbing-bar input[type=\"range\"]::-ms-thumb {\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tbackground: #B1F0F7;\n\t\tborder-radius: 50%;\n\t\tcursor: pointer;\n\t}\n\n\t.play-button {\n\t\tcursor: pointer;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t.footer {\n\t\twidth: 100%;\n\t}\n\n\t.section-title {\n\t\tmargin-bottom: 0.5rem;\n\t\tmargin-top: 0.5rem;\n\t}\n\n\t.advanced-options {\n\t\tdisplay: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 0.5rem;\n    width: 100%;\n\t}\n\n\t.advanced-options > label {\n\t\tfont-size:0.75rem;\n\t\tmargin: 0.2rem;\n\t}\n\n\t.advanced-options > input {\n\t\tfont-size: 0.75rem;\n\t\tmargin: 0rem;\n\t}\n\n\t#field-options {\n\t\tmargin-top: 1rem;\n\t}\n\n\t#advanced-options {\n\t\tmargin-top: 1rem;\n\t}\n\n\t#robot {\n\t\tposition: absolute;\n\t\ttransform: translate(-50%, 50%) rotate(90deg);\n\t\tz-index: 0;\n\t\tuser-select: none;\n\t}\n\n\timg {\n\t\tposition: absolute;\n\t\ttransform: translate(-50%, 50%);\n\t\tz-index: 0;\n\t}\n\n\t#robotUnits {\n\t\tfont-size: 0.75rem;\n\t\twidth: auto;\n\t}\n\t\n\t.standard-input-box {\n\t\twidth: 75px;\n\t}\n\n\t.start-pos-box {\n\t\twidth: 50px;\n\t}\n\n\t#robot-heading {\n\t\tfont-size: 0.75rem;\n\t\twidth: auto;\n\t\tmargin-bottom: 0rem;\n\t\theight:27.59px;\n\t\tmargin-left:10px;\n\t}\n\n\t#reverse {\n\t\tmargin-bottom: 0rem;\n\t}\n\n\t.control-point-mini-box > label {\n\t\tfont-size: 0.75rem;\n\t\tmargin: 4px;\n\t\tmargin-top: 0px;\n\t\tmargin-bottom: 0px;\n\t\tfont-weight: 750;\n\t}\n\n\t#start-angle, #end-angle, #constant-angle {\n\t\tfont-size:0.75rem;\n\t\tfont-weight: 750;\n\t\twidth: 65px;\n\t\tmargin-bottom: 0rem;\n\t\tmargin-left: 4px;\n\t}\n\n\t#rotationUnits {\n\t\tfont-size: 0.75rem;\n\t\twidth: auto;\n\t\tmargin-bottom: 0rem;\n\t}\n\n\t#code-window-btn {\n\t\tmargin: 4px;\n\t\tcursor:pointer;\n\t}\n\n\t.export-import {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tflex-direction: row;\n\t}\n\n\t.export-import > * {\n\t\tmargin: 4px;\n\t}\n\n\t#live-pos {\n\t\tflex-direction: column;\n\t\tjustify-content: left;\n\t\talign-items: left;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: flex-start;\n\t}\n\n\t.cp-x-y {\n\t\tflex-direction: row;\n\t\tjustify-content: left;\n\t\talign-items: left;\n\t\tdisplay: flex;\n\t\talign-items: flex-start;\n\t}\n\n\t.adv-options {\n\t\tfont-size:0.75rem;\n\t\tmargin: 0.2rem;\n\t}\n\n\t.start-pos-container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: left;\n\t\talign-items: left;\n\t}\n\n\t.current-path {\n\t\tdisplay: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 0.3rem;\n    width: 100%;\n\t}\n\n</style>\n\n<div>\n\t<div class=\"header\">\n\t\t<h1 class=\"page-title\">JPather</h1>\n\t\t<div class=\"export-import\">\n\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t<svg id=\"code-window-btn\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"black\" on:click={showCodeWindow}><path d=\"M160-160q-33 0-56.5-23.5T80-240v-480q0-33 23.5-56.5T160-800h640q33 0 56.5 23.5T880-720v480q0 33-23.5 56.5T800-160H160Zm0-80h640v-400H160v400Zm140-40-56-56 103-104-104-104 57-56 160 160-160 160Zm180 0v-80h240v80H480Z\"/></svg>\n\t\t\t<button on:click={resetToDefault} style=\"user-select:none;\">Reset To Default</button>\n\t\t\t<button on:click={importControlPoints} style=\"user-select:none;\">Import Control Points</button>\n\t\t\t<button on:click={exportControlPoints} style=\"user-select:none;\">Export Control Points</button>\n\t\t</div>\n\t</div>\n\n\t<div class=\"main-content\">\n\t\n\t\t<div class=\"container\">\n\t\t\t<div class=\"settings-column\">\n\t\t\t\t<div class=\"robot-options-menu\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2 class=\"section-title\" style=\"user-select:none;\">Robot Options</h2>\n\n\t\t\t\t\t\t<div class=\"robot-options\">\n\t\t\t\t\t\t\t<label for=\"robotUnits\" style=\"user-select:none;\">Units:</label>\n\t\t\t\t\t\t\t<select id=\"robotUnits\" class=\"standard-input-box\" bind:value={$robotUnits}>\n\t\t\t\t\t\t\t\t<option value=\"inches\">Inches</option>\n\t\t\t\t\t\t\t\t<option value=\"cm\">Centimeters</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t<div class=\"robot-options\">\n\t\t\t\t\t\t\t<label for=\"robot-length\" style=\"user-select:none;\">Robot Length:</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t  id=\"robot-length\"\n\t\t\t\t\t\t\t  class=\"standard-input-box\"\n\t\t\t\t\t\t\t  type=\"number\"\n\t\t\t\t\t\t\t  step=\"1\"\n\t\t\t\t\t\t\t  value={displayLength}\n\t\t\t\t\t\t\t  on:input={(e) => updateRobotLength(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t  <div class=\"robot-options\">\n\t\t\t\t\t\t\t<label for=\"robot-width\" style=\"user-select:none;\">Robot Width:</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t  id=\"robot-width\"\n\t\t\t\t\t\t\t  class=\"standard-input-box\"\n\t\t\t\t\t\t\t  type=\"number\"\n\t\t\t\t\t\t\t  step=\"1\"\n\t\t\t\t\t\t\t  value={displayWidth}\n\t\t\t\t\t\t\t  on:input={(e) => updateRobotWidth(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\n\n\n\t\t\t\t\t\t<h2 id=\"field-options\" class=\"section-title\" style=\"user-select:none;\">Field Options</h2>\n\n\t\t\t\t\t\t<!-- svelte-ignore a11y-label-has-associated-control -->\n\n\t\t\t\t\t\t<div class=\"start-pos-container\">\n\t\t\t\t\t\t<label class=\"adv-options\" style=\"user-select:none;\">Starting Position:</label>\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div class=\"control-point-mini-box\">\n\t\t\t\t\t\t\t<div class=\"control-point-mini-box-x\">\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-label-has-associated-control -->\n\t\t\t\t\t\t\t\t<label class=\"cp-x\" style=\"user-select:none;\">X:</label>\n\t\t\t\t\t\t\t\t{#if $paths.length > 0}\n\t\t\t\t\t\t\t\t<input class=\"start-pos-box\" type=\"number\" step=\"1\" bind:value={$paths[0].controlPoints[0].x} on:input={(e) => { $paths[0].controlPoints[0].x = parseFloat(e.target.value); generateBezierCurve(0); paths.set($paths); updateRobotPosition(); }}/>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"control-point-mini-box-y\">\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-label-has-associated-control -->\n\t\t\t\t\t\t\t\t<label class=\"cp-x\" style=\"user-select:none;\">Y:</label>\n\t\t\t\t\t\t\t\t{#if $paths.length > 0}\n\t\t\t\t\t\t\t\t<input class=\"start-pos-box\" type=\"number\" step=\"1\" bind:value={$paths[0].controlPoints[0].y} on:input={(e) => { $paths[0].controlPoints[0].y = parseFloat(e.target.value); generateBezierCurve(0); paths.set($paths); updateRobotPosition(); }}/>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<!-- svelte-ignore a11y-label-has-associated-control -->\n\t\t\t\t\t\t<label class=\"adv-options\" style=\"user-select:none;\">Live Position:</label>\n\t\t\t\t\t\t<div id=\"live-pos\" class=\"control-point-mini-box\">\n\t\t\t\t\t\t\t<div class=\"cp-x-y\">\n\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box-x\">\n\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-label-has-associated-control -->\n\t\t\t\t\t\t\t\t\t<label class=\"cp-x\" style=\"user-select:none;\">X:</label>\n\t\t\t\t\t\t\t\t\t<input class=\"start-pos-box\" type=\"number\" step=\"0.001\" bind:value={robotX} readonly />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box-y\">\n\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-label-has-associated-control -->\n\t\t\t\t\t\t\t\t\t<label class=\"cp-y\" style=\"user-select:none;\">Y:</label>\n\t\t\t\t\t\t\t\t\t<input class=\"start-pos-box\" type=\"number\" step=\"0.001\" bind:value={robotY} readonly />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box-heading\">\n\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-label-has-associated-control -->\n\t\t\t\t\t\t\t\t\t<label class=\"cp-heading\" style=\"user-select:none;\">θ:</label>\n\t\t\t\t\t\t\t\t\t<input class=\"start-pos-box\" type=\"number\" step=\"0.001\" value={Math.round(robotLiveAngle)} readonly />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"control-point-mini-box-x current-path\">\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-label-has-associated-control -->\n\t\t\t\t\t\t\t\t<label class=\"cp-x\" style=\"user-select:none;font-weight:600;\">Current Path:</label>\n\t\t\t\t\t\t\t\t<input class=\"start-pos-box\" type=\"number\" step=\"0.001\" value={currentPathIndex+1} readonly />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<h2 id=\"advanced-options\" class=\"section-title\" style=\"user-select:none;\">Advanced Options</h2>\n\t\t\t\t\t\t<div class=\"advanced-options\">\n\t\t\t\t\t\t\t<label for=\"field-length\" style=\"user-select:none;\">Show Robot Hitbox: </label>\n\t\t\t\t\t\t\t<input id=\"auto-link-paths\" type=\"checkbox\" bind:checked={$shouldShowHitbox} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"advanced-options\">\n\t\t\t\t\t\t\t<label for=\"field-length\" style=\"user-select:none;\">New Auto Boilerplate: </label>\n\t\t\t\t\t\t\t<input id=\"auto-link-paths\" type=\"checkbox\" bind:checked={$shouldHaveBoilerplate} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"advanced-options\">\n\t\t\t\t\t\t\t<label for=\"field-length\" style=\"user-select:none;\">Infinite Path Looping: </label>\n\t\t\t\t\t\t\t<input id=\"auto-link-paths\" type=\"checkbox\" bind:checked={$shouldRepeatPath} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"advanced-options\">\n\t\t\t\t\t\t\t<label for=\"field-length\" style=\"user-select:none;\">Auto-link Paths:</label>\n\t\t\t\t\t\t\t<input id=\"auto-link-paths\" type=\"checkbox\" bind:checked={$autoLinkPaths} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"advanced-options\">\n\t\t\t\t\t\t\t<label for=\"rotationUnits\" style=\"user-select:none;\">Rotational Units:</label>\n\t\t\t\t\t\t\t<select id=\"rotationUnits\" class=\"standard-input-box\" bind:value={$rotationUnits} on:change={updateRobotPosition}>\n\t\t\t\t\t\t\t\t<option value=\"degrees\">Degrees</option>\n\t\t\t\t\t\t\t\t<option value=\"radians\">Radians</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"field\">\n\t\t\t\t{#each $paths as path}\n\t\t\t\t\t{#each path.controlPoints as { x, y }}\n\t\t\t\t\t\t<div class=\"hover-point\">\n\t\t\t\t\t\t\t<div class=\"point\" style=\"left: {x / 144 * 100}%; bottom: {y / 144 * 100}%; background: {path.color};\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/each}\n\t\t\t\t{/each}\n\t\t\t\n\t\t\t\t<!-- Display Robot Image -->\n\t\t\t\t{#if $paths.length > 0}\n\t\t\t\t\t<img src=\"./assets/robot.png\" alt=\"Robot\" id=\"robot\"\n\t\t\t\t\t\tstyle=\"\n\t\t\t\t\t\t\twidth: {$robotWidth / 144 * 100}%;\n\t\t\t\t\t\t\theight: {$robotLength / 144 * 100}%;\n\t\t\t\t\t\t\tleft: {(robotX / 144) * 100}%;\n\t\t\t\t\t\t\tbottom: {(robotY / 144) * 100}%;\n\t\t\t\t\t\t\tuser-select: none;\n\t\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\t\"\n\t\t\t\t\t/>\n\t\t\t\t{/if}\n\t\t\t\n\n\t\t\t\t<svg viewBox=\"0 0 144 144\" width=\"100%\" height=\"100%\" style=\"position: absolute; top: 0; left: 0;\">\n    \n\t\t\t\t\t<!-- Filled Hitbox (Shaded Polygon) -->\n\t\t\t\t\t{#if $shouldShowHitbox}\n\t\t\t\t\t\t{#each offsetPaths as path}\n\t\t\t\t\t\t\t{#if path.left.length > 0 && path.right.length > 0}\n\t\t\t\t\t\t\t\t<polygon \n\t\t\t\t\t\t\t\t\tpoints=\"{\n\t\t\t\t\t\t\t\t\t\tpath.left.map(p => `${p.x},${144 - p.y}`).join(' ') + ' ' +\n\t\t\t\t\t\t\t\t\t\tpath.right.reverse().map(p => `${p.x},${144 - p.y}`).join(' ')\n\t\t\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t\t\t\tfill=\"rgba(255, 255, 255, 0.2)\"\n\t\t\t\t\t\t\t\t\tstroke=\"none\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<path d=\"M {path.left.map(p => `${p.x},${144 - p.y}`).join(' ')}\"\n\t\t\t\t\t\t\t\t\tstroke={path.color} fill=\"none\" stroke-width=\"1\" opacity=\"0.4\" />\n\t\t\t\t\t\t\t\t<path d=\"M {path.right.map(p => `${p.x},${144 - p.y}`).join(' ')}\"\n\t\t\t\t\t\t\t\t\tstroke={path.color} fill=\"none\" stroke-width=\"1\" opacity=\"0.4\" />\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t{/if}\n\t\t\t\t\n\t\t\t\t\t<!-- Main Bézier Curve -->\n\t\t\t\t\t{#each offsetPaths as path}\n\t\t\t\t\t\t{#if path.main.length > 0}\n\t\t\t\t\t\t\t<path d=\"M {path.main.map(p => `${p.x},${144 - p.y}`).join(' ')}\"\n\t\t\t\t\t\t\t\t  stroke={path.color} fill=\"none\" stroke-width=\"1\" />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t{/each}\n\t\t\t\t\n\t\t\t\t</svg>\n\t\t\t\t\n\t\t\t\t\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"paths\">\n\t\t\t\t{#each $paths as path}\n\t\t\t\t\t<div class=\"path\" style=\"border-color: {path.color};\">\n\t\t\t\t\t\t<div class=\"path-header\">\n\t\t\t\t\t\t\t<div class=\"path-and-color\">\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-click-events-have-k</div>ey-events -->\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-no-static-element-interactions -->\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill={(!(path.id == 0 || path.id == $paths.length - 1)) ? \"black\" : \"gray\"} style=\"cursor: {(!(path.id == 0 || path.id == $paths.length - 1)) ? 'pointer' : 'default'}\" on:click={() => { if (!(path.id == 0 || path.id == $paths.length - 1)) { const temp = $paths[path.id + 1]; $paths[path.id + 1] = { ...$paths[path.id], id: path.id + 1 }; $paths[path.id] = { ...temp, id: path.id }; paths.set($paths); checkAutoLinkControlPoints();}}}><path d=\"M480-240 240-480l56-56 144 144v-368h80v368l144-144 56 56-240 240Z\"/></svg>\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-no-static-element-interactions -->\n\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill={!(path.id == 0 || path.id == 1) ? \"black\" : \"gray\"} style=\"cursor: {!(path.id == 0 || path.id == 1) ? 'pointer' : 'default'}\" on:click={() => { if (!(path.id == 0 || path.id == 1)) { const temp = $paths[path.id - 1]; $paths[path.id - 1] = { ...$paths[path.id], id: path.id - 1 }; $paths[path.id] = { ...temp, id: path.id }; paths.set($paths); checkAutoLinkControlPoints();}}}><path d=\"M440-240v-368L296-464l-56-56 240-240 240 240-56 56-144-144v368h-80Z\"/></svg>\n\t\t\t\t\t\t\t\t<input type=\"color\" class=\"color-circle\" style=\"background-color: {path.color};\" bind:value={path.color} on:input={() => updatePathColor(path.id, path.color)} />\n\t\t\t\t\t\t\t\t<p class=\"path-title\" style=\"user-select:none;\">Path {path.id + 1}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<!-- svelte-ignore a11y-no-static-element-interactions -->\n\t\t\t\t\t\t\t<!-- svelte-ignore a11y-no-static-element-interactions -->\n\t\t\t\t\t\t\t<div class=\"add-and-remove\">\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill={($paths.length > 1) ? \"#FF474D\" : \"gray\"} on:click={() => { if ($paths.length > 1) deletePath(path.id); }} style=\"cursor: {($paths.length > 1) ? 'pointer' : 'default'};\"><path d=\"M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z\"/></svg>\n\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#90EE90\" on:click={() => addControlPointToPathWithIndex(path.id, path.controlPoints.length - 1)} on:keydown={(e) => { if (e.key === 'Enter') addControlPointToPathWithIndex(path.id, path.controlPoints.length - 1); }} style=\"cursor: pointer;\"><path d=\"M440-280h80v-160h160v-80H520v-160h-80v160H280v80h160v160Zm40 200q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z\"/></svg>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"path-control-points\">\n\t\t\t\t\t\t\t\t{#each path.controlPoints as { x, y }, i}\n\t\t\t\t\t\t\t\t\t<div class=\"control-point-box\">\n\t\t\t\t\t\t\t\t\t\t{#if (i == 0)}\n\t\t\t\t\t\t\t\t\t\t\t<label for=\"control-point-{path.id}-{i}\" style=\"user-select:none;\">Endpoint:</label>\n\t\t\t\t\t\t\t\t\t\t{:else if (i > 0 && i!=path.controlPoints.length-1)}\n\t\t\t\t\t\t\t\t\t\t\t<label for=\"control-point-{path.id}-{i}\" style=\"user-select:none;\">Control Point {i}:</label>\n\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t{#if i > 0 && i!=path.controlPoints.length-1}\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box-x\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"cp-x\" for=\"control-point-{path.id}-{i}\" style=\"user-select:none;\">X:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"cp-input\" class=\"standard-input-box\" type=\"number\" step=\"1\" value={path.controlPoints[i].x} on:input={(e) => { path.controlPoints[i].x = parseFloat(e.target.value); generateBezierCurve(path.id); paths.set($paths); }} />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box-y\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"cp-y\" for=\"control-point-{path.id}-{i}-y\" style=\"user-select:none;\">Y:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"cp-input\" class=\"standard-input-box\" type=\"number\" step=\"1\" value={path.controlPoints[i].y} on:input={(e) => { path.controlPoints[i].y = parseFloat(e.target.value); generateBezierCurve(path.id); paths.set($paths); }} />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t{#if (i > 0)}\n\t\t\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-no-static-element-interactions -->\n\t\t\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\n\n\t\t\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#FF474D\" on:click={() => { if (path.controlPoints.length > 2) { path.controlPoints.splice(i, 1); generateBezierCurve(path.id); paths.set($paths); } }} style=\"cursor: pointer;\"><path d=\"M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z\"/></svg>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{:else if (i==0)}\n\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box-x\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"cp-x\" for=\"control-point-{path.id}-{i}\" style=\"user-select:none;\">X:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"control-point-{path.id}-{i}\" class=\"standard-input-box\" type=\"number\" step=\"1\" value={path.controlPoints[path.controlPoints.length-1].x} on:input={(e) => { path.controlPoints[path.controlPoints.length-1].x = parseFloat(e.target.value); generateBezierCurve(path.id); paths.set($paths); }} />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box-y\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"cp-y\" for=\"control-point-{path.id}-{i}-y\" style=\"user-select:none;\">Y:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"control-point-{path.id}-{i}-y\" class=\"standard-input-box\" type=\"number\" step=\"1\" value={path.controlPoints[path.controlPoints.length-1].y} on:input={(e) => { path.controlPoints[path.controlPoints.length-1].y = parseFloat(e.target.value); generateBezierCurve(path.id); paths.set($paths); }} />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"robot-heading\" class=\"standard-input-box\" bind:value={path.robotHeading} on:change={() => generateBezierCurve(path.id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"constant\">Constant</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"tangential\">Tangential</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"linear\">Linear</option>\n\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\n\t\t\t\t\t\t\t\t\t\t\t{#if path.robotHeading === 'linear'}\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"start-angle\" class=\"standard-input-box\" type=\"number\" step=\"0.01\" bind:value={path.startAngleDegrees}  on:input={() => updateRobotPosition()}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"end-angle\" class=\"standard-input-box\" type=\"number\" step=\"0.01\" bind:value={path.endAngleDegrees} on:input={() => updateRobotPosition()}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t{:else if path.robotHeading === 'tangential'}\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"reverse\" style=\"user-select:none;\">Reverse:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"reverse\" type=\"checkbox\" bind:checked={path.reverse} on:input={() => updateRobotPosition()}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t{:else if path.robotHeading === 'constant'}\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"control-point-mini-box\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"constant-angle\" class=\"standard-input-box\" type=\"number\" step=\"0.01\" bind:value={path.constantAngleDegrees} on:input={() => updateRobotPosition()}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t{/each}\n\n\t\t\t\t<button on:click={() => {addPath(); generateBezierCurve($paths.length - 1);}} style=\"user-select:none;\">Add Path</button>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"footer\">\n\t\t\t<div class=\"scrubbing-bar\">\n\t\t\t\t<div class=\"play-button\">\n\t\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t\t\t<!-- svelte-ignore a11y-no-static-element-interactions -->\n\t\t\t\t\t{#if !isPlaying}\n\t\t\t\t\t \t<!-- svelte-ignore a11y-no-static-element-interactions -->\n\t\t\t\t\t \t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#90EE90\" on:click={playPath}><path d=\"M320-200v-560l440 280-440 280Zm80-280Zm0 134 210-134-210-134v268Z\"/></svg>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#FF474D\" on:click={pausePath}><path d=\"M520-200v-560h240v560H520Zm-320 0v-560h240v560H200Zm400-80h80v-400h-80v400Zm-320 0h80v-400h-80v400Zm0-400v400-400Zm320 0v400-400Z\"/></svg>\n\t\t\t\t\t{/if}\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<input type=\"range\" id=\"scrub\" min=\"0\" max=\"100\" step=\"0.001\" bind:value={linearScrubValue} on:input={updateRobotPosition} />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["PathClass"],"mappings":"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","x_google_ignoreList":[0,1]}